pg_stat_bgwriter:
  name: pg_stat_bgwriter
  desc: OpenGauss background writer metrics
  query:
    - name: pg_stat_bgwriter
      sql: |-
        SELECT checkpoints_timed,
          checkpoints_req,
          checkpoint_write_time,
          checkpoint_sync_time,
          buffers_checkpoint,
          buffers_clean,
          buffers_backend,
          maxwritten_clean,
          buffers_backend_fsync,
          buffers_alloc,
          stats_reset
        FROM pg_stat_bgwriter
      version: '>=0.0.0'
      timeout: 1
      ttl: 60
      status: enable
  metrics:
    - name: checkpoints_timed
      description: scheduled checkpoints that have been performed
      usage: COUNTER
    - name: checkpoints_req
      description: requested checkpoints that have been performed
      usage: COUNTER
    - name: checkpoint_write_time
      description: time spending on writing files to disk, in µs
      usage: COUNTER
    - name: checkpoint_sync_time
      description: time spending on syncing files to disk, in µs
      usage: COUNTER
    - name: buffers_checkpoint
      description: buffers written during checkpoints
      usage: COUNTER
    - name: buffers_clean
      description: buffers written by the background writer
      usage: COUNTER
    - name: buffers_backend
      description: buffers written directly by a backend
      usage: COUNTER
    - name: maxwritten_clean
      description: times that bgwriter stopped a cleaning scan
      usage: COUNTER
    - name: buffers_backend_fsync
      description: times a backend had to execute its own fsync
      usage: COUNTER
    - name: buffers_alloc
      description: buffers allocated
      usage: COUNTER
    - name: stats_reset
      description: time when statistics were last reset
      usage: COUNTER
  status: enable
  ttl: 60
  timeout: 1
pg_database:
  name: pg_database
  desc: OpenGauss Database size
  query:
    - name: pg_database
      sql: |-
        SELECT datname,
          pg_database_size(pg_database.datname) as size_bytes,
          age(datfrozenxid64)          AS age,
          datistemplate              AS is_template,
          datallowconn               AS allow_conn,
          datconnlimit               AS conn_limit,
          datfrozenxid::TEXT::BIGINT as frozen_xid
        FROM pg_database
        where datname NOT IN ('template0','template1');
      version: '>=0.0.0'
      timeout: 1
      ttl: 60
      status: enable
  metrics:
    - name: datname
      description: Name of this database
      usage: LABEL
    - name: size_bytes
      description: Disk space used by the database
      usage: GAUGE
    - name: age
      description: database age calculated by age(datfrozenxid64)
      usage: GAUGE
    - name: is_template
      description: 1 for template db and 0 for normal db
      usage: GAUGE
    - name: allow_conn
      description: 1 allow connection and 0 does not allow
      usage: GAUGE
    - name: conn_limit
      description: connection limit, -1 for no limit
      usage: GAUGE
    - name: frozen_xid
      description: tuple with xmin below this will always be visable (until wrap around)
      usage: GAUGE
  status: enable
  ttl: 60
  timeout: 1
pg_meta:
  name: pg_meta
  desc: OpenGauss database directory
  query:
    - name: pg_meta
      sql: |-
        SELECT (SELECT system_identifier FROM pg_control_system()) AS cluster_id,
          current_setting('port')                             AS listen_port,
          current_setting('wal_level')                        AS wal_level,
          current_setting('server_version')                   AS version,
          current_setting('server_version_num')               AS ver_num,
          'N/A'                                               AS primary_conninfo,
          1                                                   AS info;
      version: '>=0.0.0'
      timeout: 1
      status: enable
  metrics:
    - name: cluster_id
      description: cluster system identifier
      usage: LABEL
    - name: listen_port
      description: listen port
      usage: LABEL
    - name: wal_level
      description: wal level
      usage: LABEL
    - name: version
      description: server version in human readable format
      usage: LABEL
    - name: ver_num
      description: server version number in machine readable format
      usage: LABEL
    - name: primary_conninfo
      description: connection string to upstream (do not set password here)
      usage: LABEL
    - name: info
      description: constant 1
      usage: GAUGE
  status: enable
  ttl: 60
  timeout: 1
pg_connections:
  name: pg_connections
  desc: OpenGauss database connections
  query:
    - name: pg_connections
      sql: select max_conn,used_conn,max_conn-used_conn res_for_normal from (select count(*) used_conn from pg_stat_activity) t1,(select setting::int max_conn from pg_settings where name='max_connections') t2;
      version: '>=0.0.0'
      timeout: 1
      status: enable
  metrics:
    - name: max_conn
      description: total of connections
      usage: GAUGE
    - name: used_conn
      description: used of connections
      usage: GAUGE
    - name: res_for_normal
      description: reserve of connections
      usage: GAUGE
  status: enable
  ttl: 60
  timeout: 1
pg_stat_activity:
  name: pg_stat_activity
  desc: OpenGauss backend activity group by state
  query:
    - name: pg_stat_activity
      sql: |-
        SELECT datname,
               state,
               coalesce(count, 0)             AS count,
               coalesce(max_duration, 0)      AS max_duration,
               coalesce(max_tx_duration, 0)   AS max_tx_duration,
               coalesce(max_conn_duration, 0) AS max_conn_duration
        FROM (SELECT d.oid AS database, d.datname, a.state
              FROM pg_database d,
                   unnest(ARRAY ['active','idle','idle in transaction','idle in transaction (aborted)','fastpath function call','disabled']) a(state)
              WHERE d.datname NOT IN ('template0','template1')) base
                 LEFT JOIN (
            SELECT datname, state,
                   count(*) AS count,
                   max(extract(epoch from now() - state_change)) AS max_duration,
                   max(extract(epoch from now() - xact_start))   AS max_tx_duration,
                   max(extract(epoch from now() - backend_start)) AS max_conn_duration
            FROM pg_stat_activity WHERE pid <> pg_backend_pid()
            GROUP BY datname, state
        ) a USING (datname, state);
      version: '>=1.0.0'
      timeout: 1
      ttl: 60
      status: enable
  metrics:
    - name: datname
      description: Name of this database
      usage: LABEL
    - name: state
      description: connection state
      usage: LABEL
    - name: count
      description: number of connections in this state
      usage: GAUGE
    - name: max_duration
      description: max duration since state change among (datname, state)
      usage: GAUGE
    - name: max_tx_duration
      description: max duration in seconds any active transaction has been running
      usage: GAUGE
    - name: max_conn_duration
      description: max backend session duration since state change among (datname, state)
      usage: GAUGE
  status: enable
  ttl: 60
  timeout: 1
pg_stat_replication:
  name: pg_stat_replication
  query:
    - name: pg_stat_replication
      sql: |-
        SELECT pid,client_addr,application_name,state,sync_state,lsn,
                   lsn - sent_location   as sent_diff,
           lsn - write_location  as write_diff,
           lsn - flush_location  as flush_diff,
           lsn - replay_location as replay_diff,
           sent_location,write_location,flush_location,replay_location,
           backend_uptime,sync_priority
           FROM (
           SELECT pid,
             client_addr,
             application_name,
             state,
             sync_state,
             pg_xlog_location_diff(CASE WHEN pg_is_in_recovery() THEN pg_last_xlog_receive_location() ELSE pg_current_xlog_location() END, '0/0') AS lsn,
             pg_xlog_location_diff(sender_sent_location,'0/0')                          AS sent_location,
             pg_xlog_location_diff(receiver_write_location,'0/0')                         AS write_location,
             pg_xlog_location_diff(receiver_flush_location,'0/0')                         AS flush_location,
             pg_xlog_location_diff(receiver_replay_location,'0/0')                        AS replay_location,
             pg_xlog_location_diff(receiver_replay_location,pg_current_xlog_location())   AS replay_lag,
             extract(EPOCH FROM now() - backend_start) AS backend_uptime,
             sync_priority
        FROM pg_stat_replication) t;
      version: '>=1.0.0'
      timeout: 1
      ttl: 60
      status: enable
  metrics:
    - name: pid
      description: unique walsender pid
      usage: LABEL
    - name: client_addr
      description: client address of wal receiver
      usage: LABEL
    - name: application_name
      description: application name of standby
      usage: LABEL
    - name: state
      description: replication state startup|catchup|streaming|backup|stopping
      usage: LABEL
    - name: sync_state
      description: replication sync state async|potential|sync|quorum
      usage: LABEL
    - name: lsn
      description: current log position on this server
      usage: COUNTER
    - name: sent_diff
      description: last log position sent to this standby server diff with current lsn
      usage: GAUGE
    - name: write_diff
      description: last log position written to disk by this standby server diff with current lsn
      usage: GAUGE
    - name: flush_diff
      description: last log position flushed to disk by this standby server diff with current lsn
      usage: GAUGE
    - name: replay_diff
      description: last log position replayed into the database on this standby server diff with current lsn
      usage: GAUGE
    - name: sent_lsn
      description: last log position sent to this standby server
      usage: COUNTER
    - name: write_lsn
      description: last log position written to disk by this standby server
      usage: COUNTER
    - name: flush_lsn
      description: last log position flushed to disk by this standby server
      usage: COUNTER
    - name: replay_lsn
      description: last log position replayed into the database on this standby server
      usage: COUNTER
    - name: write_lag
      description: latest ACK lsn diff with write (sync-remote-write lag)
      usage: GAUGE
    - name: flush_lag
      description: latest ACK lsn diff with flush (sync-remote-flush lag)
      usage: GAUGE
    - name: replay_lag
      description: latest ACK lsn diff with replay (sync-remote-apply lag)
      usage: GAUGE
    - name: backend_uptime
      description: how long since standby connect to this server
      usage: GAUGE
    - name: backend_xmin
      description: this standby's xmin horizon reported by hot_standby_feedback.
      usage: GAUGE
    - name: sync_priority
      description: priority of being chosen as synchronous standby
      usage: GAUGE
  status: enable
  ttl: 60
  timeout: 1
pg_downstream:
  name: pg_downstream
  desc: OpenGauss database downstream
  query:
    - name: pg_downstream
      sql: |-
        SELECT l.state, coalesce(count, 0 ) AS count
        FROM unnest(ARRAY ['Streaming','Startup','Catchup', 'Backup', 'Stopping']) l(state)
        LEFT JOIN (SELECT state, count(*) AS count FROM pg_stat_replication GROUP BY state)r ON l.state =  r.state;
      version: '>=0.0.0'
      timeout: 1
      status: enable
  metrics:
    - name: state
      description: downstream state
      usage: LABEL
    - name: count
      description: downstream count
      usage: GAUGE
  status: enable
  ttl: 5
  timeout: 1
pg_replication_slots:
  name: pg_replication_slots
  query:
    - name: pg_replication_slots
      sql: |-
        select slot_name,
            database                    as datname,
            coalesce(plugin,'_') as plugin,
            slot_type,datoid,coalesce(database,'_') as database,
            active,
            coalesce(xmin,'_') as xmin,
            coalesce(catalog_xmin,'_') as catalog_xmin,
            restart_lsn,
            pg_xlog_location_diff(pg_current_xlog_location(),restart_lsn) as delay_lsn,
            dummy_standby,
            pg_xlog_location_diff(restart_lsn ,'0/0'::text)        AS restart_lsn,
            pg_xlog_location_diff(CASE WHEN pg_is_in_recovery() THEN pg_last_xlog_receive_location()
            ELSE pg_current_xlog_location() END , restart_lsn)  AS retained_bytes
            from pg_replication_slots;
      version: '>=1.0.0'
      timeout: 1
      ttl: 60
      status: enable
  metrics:
    - name: slot_name
      description: Slot name
      usage: LABEL
    - name: plugin
      description: Logical plugin
      usage: LABEL
    - name: slot_type
      description: Slot type
      usage: LABEL
    - name: datoid
      description: Database oid
      usage: LABEL
    - name: database
      description: Database name
      usage: LABEL
    - name: active
      description: Is active
      usage: LABEL
    - name: xmin
      description: replication xid
      usage: LABEL
    - name: catalog_xmin
      description: logical decode xid
      usage: LABEL
    - name: restart_lsn
      description: Xlog info
      usage: LABEL
    - name: delay_lsn
      description: delay lsn from pg_current_xlog_location()
      usage: GAUGE
    - name: dummy_standby
      description: Is real standby
      usage: DISCARD
  status: enable
  ttl: 60
  timeout: 1
pg_func:
  name: pg_func
  query:
    - name: pg_func
      sql: |-
        SELECT CURRENT_CATALOG AS datname,
          schemaname      AS nspname,
          funcname,
          funcid,
          calls,
          total_time,
          self_time
        FROM pg_stat_user_functions
        ORDER BY 4 DESC LIMIT 128;
      version: '>=1.0.0'
      timeout: 1
      ttl: 60
      status: enable
  metrics:
    - name: datname
      description: database name of this function
      usage: LABEL
    - name: nspname
      description: schema name of this function
      usage: LABEL
    - name: funcname
      description: function name
      usage: LABEL
    - name: funcid
      description: function id, dedupe for funcname override
      usage: LABEL
    - name: calls
      description: how many times this function has been called
      usage: COUNTER
    - name: total_time
      description: how much time spent in this function and it's child function, in ms
      usage: COUNTER
    - name: self_time
      description: how much time spent in this function itself (other func not included), in ms
      usage: COUNTER
  status: enable
  ttl: 60
  timeout: 1
pg_lock:
  name: pg_lock
  desc: OpenGauss lock distribution by mode
  query:
    - name: pg_lock
      sql: |-
        SELECT datname, mode, coalesce(count, 0) AS count
        FROM (
          SELECT d.oid AS database, d.datname, l.mode
          FROM pg_database d,unnest(ARRAY ['AccessShareLock','RowShareLock','RowExclusiveLock','ShareUpdateExclusiveLock','ShareLock','ShareRowExclusiveLock','ExclusiveLock','AccessExclusiveLock']) l(mode)
          WHERE d.datname NOT IN ('template0','template1')) base
        LEFT JOIN (SELECT database, mode, count(1) AS count
                   FROM pg_locks
                   WHERE database IS NOT NULL GROUP BY database, mode) cnt
        USING (database, mode);
      version: '>=0.0.0'
      timeout: 1
      ttl: 60
      status: enable
  metrics:
    - name: datname
      description: Name of this database
      usage: LABEL
    - name: mode
      description: Type of Lock
      usage: LABEL
    - name: count
      description: Number of locks
      usage: GAUGE
  status: enable
  ttl: 60
  timeout: 1
pg_stat_database_conflicts:
  name: pg_stat_database_conflicts
  desc: OpenGauss database statistics conflicts
  query:
    - name: pg_stat_database_conflicts
      sql: select * from pg_stat_database_conflicts where datname NOT IN ('template0','template1');
      version: '>=0.0.0'
      timeout: 1
      ttl: 60
      status: enable
  metrics:
    - name: datid
      description: OID of a database
      usage: LABEL
    - name: datname
      description: Name of this database
      usage: LABEL
    - name: confl_tablespace
      description: Number of queries in this database that have been canceled due to dropped tablespaces
      usage: COUNTER
    - name: confl_lock
      description: Number of queries in this database that have been canceled due to lock timeouts
      usage: COUNTER
    - name: confl_snapshot
      description: Number of queries in this database that have been canceled due to old snapshots
      usage: COUNTER
    - name: confl_bufferpin
      description: Number of queries in this database that have been canceled due to pinned buffers
      usage: COUNTER
    - name: confl_deadlock
      description: Number of queries in this database that have been canceled due to deadlocks
      usage: COUNTER
  status: enable
  ttl: 60
  timeout: 1
pg_run_times:
  name: pg_run_times
  desc: OpenGauss database run times
  query:
    - name: pg_run_times
      sql: select 'cluster_runtime' as run_name,(case pg_is_in_recovery() when 'f' then 1 else 0 end) as db_role,extract(epoch from(now() - pg_postmaster_start_time())) as run_time;
      version: '>=0.0.0'
      timeout: 1
      status: enable
  metrics:
    - name: run_name
      description: Name of cluster
      usage: LABEL
    - name: db_role
      description: Role of database
      usage: GAUGE
    - name: run_time
      description: Run times of cluster
      usage: GAUGE
  status: enable
  ttl: 60
  timeout: 1
pg_tables_size:
  name: pg_tables_size
  desc: OpenGauss tables size
  query:
    - name: pg_tables_size
      sql: |-
        SELECT CURRENT_CATALOG                       AS datname,
            nsp.nspname,
            rel.relname,
            pg_total_relation_size(rel.oid)       AS bytes,
            pg_relation_size(rel.oid)             AS relsize,
            pg_indexes_size(rel.oid)              AS indexsize,
            pg_total_relation_size(reltoastrelid) AS toastsize
         FROM pg_namespace nsp
              JOIN pg_class rel ON nsp.oid = rel.relnamespace
         WHERE nspname NOT IN ('pg_catalog', 'information_schema')
         AND rel.relkind = 'r';
      version: '>=0.0.0'
      timeout: 1
      status: disable
  metrics:
    - name: datname
      description: database name of this relation
      usage: LABEL
    - name: nspname
      description: schema name of this relation
      usage: LABEL
    - name: relname
      description: relation name of this relation
      usage: LABEL
    - name: bytes
      description: total size of this table (including toast, index, toast index)
      usage: GAUGE
    - name: relsize
      description: size of this table itself (main, vm, fsm)
      usage: GAUGE
    - name: indexsize
      description:  size of all related indexes
      usage: GAUGE
    - name: toastsize
      description:  size of corresponding toast tables
      usage: GAUGE
  status: disable
  ttl: 60
  timeout: 1
pg_toast_tables_size:
  name: pg_toast_tables_size
  desc: OpenGauss toast tables info
  query:
    - name: pg_toast_tables_size
      sql: select t3.schemaname||'.'||t3.relname as tablename,pg_table_size(t1.oid) as tablesize,t3.schemaname||'.'||t2.relname as toast_name,pg_table_size(t2.oid) as toastsize from pg_class t1 join pg_class t2 on t1.reltoastrelid=t2.oid and t1.reltoastrelid !=0 join pg_stat_user_tables t3 on t1.oid=relid;
      version: '>=0.0.0'
      timeout: 1
      status: enable
  metrics:
    - name: tablename
      description: Name of table
      usage: LABEL
    - name: table_size
      description: Size of table
      usage: LABEL
    - name: toast_name
      description: Name of toast
      usage: LABEL
    - name: toastsize
      description: Size of toast
      usage: GAUGE
  status: enable
  ttl: 60
  timeout: 1
pg_indexes_size:
  name: pg_indexes_size
  desc: OpenGauss database indexes size
  query:
    - name: pg_indexes_size
      sql: |-
        SELECT n.nspname as schema_name,c2.relname as table_name,c.relname as index_name,pg_catalog.pg_table_size(c.oid) as index_size
        FROM pg_catalog.pg_class c
        LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
        LEFT JOIN pg_catalog.pg_index i ON i.indexrelid = c.oid
        LEFT JOIN pg_catalog.pg_class c2 ON i.indrelid = c2.oid
        WHERE c.relkind IN ('i','I','') AND n.nspname <> 'pg_catalog' AND n.nspname <> 'information_schema' AND n.nspname !~ '^pg_toast' AND c.relname not like 'matviewmap_%' AND c.relname not like 'mlog_%'
        ORDER BY 4 desc;
      version: '>=0.0.0'
      timeout: 1
      status: disable
  metrics:
    - name: schema_name
      description: Schema name of index
      usage: LABEL
    - name: table_name
      description: Table name of index
      usage: LABEL
    - name: index_name
      description: Name of index
      usage: LABEL
    - name: index_size
      description: Size of index
      usage: GAUGE
  status: disable
  ttl: 60
  timeout: 1
pg_need_indexes:
  name: pg_need_indexes
  desc: OpenGauss tables need indexes
  query:
    - name: pg_need_indexes
      sql: |-
        select schemaname||'.'||relname as tablename, pg_size_pretty(pg_table_size(relid)) as table_size, seq_scan, seq_tup_read, coalesce(idx_scan,0) idx_scan, coalesce(idx_tup_fetch,0) idx_tup_fetch,coalesce((idx_scan/(case when (seq_scan+idx_scan) >0 then (seq_scan+idx_scan) else 1 end) * 100),0) as rate
        from pg_stat_user_tables
        where pg_table_size(relid) > 1024*1024*1024 and coalesce((idx_scan/(case when (seq_scan+idx_scan) >0 then (seq_scan+idx_scan) else 1 end) * 100),0) < 90 order by seq_scan desc limit 10;
      version: '>=0.0.0'
      timeout: 1
      status: disable
  metrics:
    - name: tablename
      description: Name of table
      usage: LABEL
    - name: table_size
      description: Size of table
      usage: LABEL
    - name: seq_scan
      description: Scan numbers of seq
      usage: GAUGE
    - name: seq_tup_read
      description: Tup read numbers of seq
      usage: GAUGE
    - name: idx_scan
      description: Scan numbers of indexes
      usage: GAUGE
    - name: idx_tup_fetch
      description: Tup fetch numbers of indexes
      usage: GAUGE
    - name: rate
      description: Index used rate
      usage: GAUGE
  status: disable
  ttl: 60
  timeout: 1
pg_never_used_indexes:
  name: pg_never_used_indexes
  desc: OpenGauss indexes never used
  query:
    - name: pg_never_used_indexes
      sql: |-
        select pi.schemaname, pi.relname, pi.indexrelname, pg_size_pretty(pg_table_size(pi.indexrelid)) as index_size
        from pg_indexes pis
        join pg_stat_user_indexes pi
        on pis.schemaname = pi.schemaname and pis.tablename = pi.relname and pis.indexname = pi.indexrelname
        left join pg_constraint pco
        on pco.conname = pi.indexrelname and pco.conrelid = pi.relid
        where pi.schemaname='public'
        and pco.contype is distinct from 'p' and pco.contype is distinct from 'u'
        and (idx_scan,idx_tup_read,idx_tup_fetch) = (0,0,0)
        and pis.indexdef !~ ' UNIQUE INDEX '
        and pi.relname !~ 'backup$'
        order by pg_table_size(indexrelid) desc;
      version: '>=0.0.0'
      timeout: 1
      status: enable
  metrics:
    - name: schemaname
      description: Schema of table
      usage: LABEL
    - name: relname
      description: Name of table
      usage: LABEL
    - name: indexrelname
      description: Name of index
      usage: LABEL
    - name: index_size
      description: Size of index
      usage: GAUGE
  status: enable
  ttl: 60
  timeout: 1
pg_tables_expansion_rate:
  name: pg_tables_expansion_rate
  desc: OpenGauss database tables expansion rate
  query:
    - name: pg_tables_expansion_rate
      sql: |-
        select schemaname,relname,n_live_tup,n_dead_tup,round((n_dead_tup/(n_dead_tup+n_live_tup) *100),2) as dead_rate,
        coalesce(last_vacuum,'1970-01-01')::text as last_vacuum,
        coalesce(last_autovacuum,'1970-01-01')::text as last_autovacuum ,
        coalesce(last_analyze,'1970-01-01')::text as last_analyze,
        coalesce(last_autoanalyze,'1970-01-01')::text as last_autoanalyze,
        vacuum_count,autovacuum_count,analyze_count,autoanalyze_count
        from pg_stat_user_tables
        where n_live_tup > 0
        order by 5 asc;
      version: '>=0.0.0'
      timeout: 1
      status: enable
  metrics:
    - name: schemaname
      description: Schema name of table
      usage: LABEL
    - name: relname
      description: Table name of table
      usage: LABEL
    - name: n_live_tup
      description: live tup of table
      usage: LABEL
    - name: n_dead_tup
      description: dead tup of table
      usage: LABEL
    - name: dead_rate
      description: Dead rate of table
      usage: GAUGE
    - name: last_vacuum
      description: dead tup of table
      usage: LABEL
    - name: last_autovacuum
      description: dead tup of table
      usage: LABEL
    - name: last_analyze
      description: dead tup of table
      usage: LABEL
    - name: last_autoanalyze
      description: dead tup of table
      usage: LABEL
    - name: vacuum_count
      description: count of vacuum
      usage: GAUGE
    - name: autovacuum_count
      description: Count of autovacuum
      usage: GAUGE
    - name: analyze_count
      description: Count of analyze
      usage: GAUGE
    - name: autoanalyze_count
      description: Count of autoanalyze
      usage: GAUGE
  status: enable
  ttl: 60
  timeout: 1
pg_active_slowsql:
  name: pg_active_slowsql
  desc: OpenGauss active slow query
  query:
    - name: pg_active_slowsql
      sql: select datname,usename,client_addr,pid,query_start::text,extract(epoch from (now() - query_start)) as query_runtime,xact_start::text,extract(epoch from(now() - xact_start)) as xact_runtime,state,query from pg_stat_activity where state not in('idle') and query !='';
      version: '>=0.0.0'
      timeout: 1
      status: enable
  metrics:
    - name: datname
      description: Name of database
      usage: LABEL
    - name: usename
      description: Name of user
      usage: LABEL
    - name: client_addr
      description: Client address
      usage: LABEL
    - name: pid
      description: Client address
      usage: LABEL
    - name: query_start
      description: Query start time
      usage: LABEL
    - name: query_runtime
      description: Query running time
      usage: GAUGE
    - name: xact_start
      description: Start time of transaction
      usage: LABEL
    - name: xact_runtime
      description: transaction running time
      usage: LABEL
    - name: state
      description: Query state
      usage: LABEL
    - name: query
      description: Query sql
      usage: LABEL
  status: enable
  ttl: 5
  timeout: 1
pg_sql_history:
  name: pg_sql_history
  desc: OpenGauss history query statement
  query:
    - name: pg_sql_history
      sql: select unique_sql_id,n_calls,cpu_time,min_elapse_time,max_elapse_time,total_elapse_time,query from dbe_perf.statement where n_calls > 10000 order by total_elapse_time desc limit 10;
      version: '>=0.0.0'
      timeout: 1
      status: enable
  metrics:
    - name: unique_sql_id
      description: Name of database
      usage: LABEL
    - name: n_calls
      description: Name of user
      usage: GAUGE
    - name: cpu_time
      description: Client address
      usage: GAUGE
    - name: min_elapse_time
      description: Query start time
      usage: LABEL
    - name: max_elapse_time
      description: Query running time
      usage: GAUGE
    - name: total_elapse_time
      description: Start time of transaction
      usage: GAUGE
    - name: query
      description: transaction running time
      usage: LABEL
  status: enable
  ttl: 60
  timeout: 1
pg_wait_events:
  name: pg_wait_events
  desc: OpenGauss wait event statements
  query:
    - name: pg_wait_events
      sql: select nodename,type,event,wait,failed_wait,total_wait_time from dbe_perf.wait_events where wait !=0 order by total_wait_time desc;
      version: '>=0.0.0'
      timeout: 1
      status: enable
  metrics:
    - name: nodename
      description: Name of node
      usage: LABEL
    - name: type
      description: Type of wait events
      usage: LABEL
    - name: event
      description: Event name
      usage: LABEL
    - name: wait
      description: Numbers of wait
      usage: COUNTER
    - name: failed_wait
      description: failed wait
      usage: LABEL
    - name: total_wait_time
      description: Total wait times
      usage: COUNTER
  status: enable
  ttl: 60
  timeout: 1
pg_lock_sql:
  name: pg_lock_sql
  desc: OpenGauss lock sqls
  query:
    - name: pg_lock_sql
      sql: |-
        select distinct locker.pid as locker_pid,
          locked.pid as locked_pid,
          coalesce(locker_act.client_addr,'127.0.0.1')::inet as locker_addr,
          coalesce(locked_act.client_addr,'127.0.0.1')::inet as locked_addr,
          locker_act.usename as locker_username,
          locked_act.usename as locked_username,
          locker.mode as locker_mode,
          locked.mode as locked_mode,
          locker.locktype as locker_locktype,
          locked.locktype as locked_locktype,
          locker_act.usename as locker_user,
          locked_act.usename as locker_user,
          (locker_act.xact_start)::text as locker_xact_start,
          (locked_act.xact_start)::text as locked_xact_start,
          (locker_act.query_start)::text as locker_query_start,
          (locked_act.query_start)::text as locked_query_start,
          extract(epoch from now() - locked_act.query_start) as locked_times,
          locker_act.query as locker_query,
          locked_act.query as locked_query
        from pg_locks locked,
          pg_locks locker,
          pg_stat_activity locked_act,
          pg_stat_activity locker_act
        where locker.granted=true
          and locked.granted=false
          and locked.pid=locked_act.pid
          and locker.pid=locker_act.pid
          and locker_act.query not like '%select distinct locker.pid %'
          and locker.pid <> locked.pid
          and locker.mode not like 'AccessShareLock' and locker.mode not like 'ExclusiveLock'
        order by 13 asc limit 10;
      version: '>=0.0.0'
      timeout: 1
      status: enable
  metrics:
    - name: locker_pid
      description: Pid of locker
      usage: LABEL
    - name: locked_pid
      description: Pid of locked
      usage: LABEL
    - name: locker_addr
      description: Event name
      usage: LABEL
    - name: locked_addr
      description: Event name
      usage: LABEL
    - name: locker_username
      description: Numbers of wait
      usage: LABEL
    - name: locked_username
      description: Numbers of wait
      usage: LABEL
    - name: locker_mode
      description: failed wait
      usage: LABEL
    - name: locked_mode
      description: failed wait
      usage: LABEL
    - name: locker_locktype
      description: Total wait times
      usage: LABEL
    - name: locked_locktype
      description: Total wait times
      usage: LABEL
    - name: locker_user
      description: Total wait times
      usage: LABEL
    - name: locked_user
      description: Total wait times
      usage: LABEL
    - name: locker_xact_start
      description: Total wait times
      usage: LABEL
    - name: locked_xact_start
      description: Total wait times
      usage: LABEL
    - name: locker_query_start
      description: Total wait times
      usage: LABEL
    - name: locked_query_start
      description: Total wait times
      usage: LABEL
    - name: locked_times
      description: Total wait times
      usage: GAUGE
    - name: locker_query
      description: Total wait times
      usage: LABEL
    - name: locked_query
      description: Total wait times
      usage: LABEL
  status: enable
  ttl: 60
  timeout: 1
og_memory_info:
  name: og_memory_info
  desc: OpenGauss memory usage informations
  query:
    - name: og_memory_info
      sql: select memorytype,memorymbytes from pv_total_memory_detail();
      version: '>=0.0.0'
      timeout: 1
      status: enable
  metrics:
    - name: memorytype
      description: Name of memorytype
      usage: LABEL
    - name: memorymbytes
      description: memorymbytes
      usage: GAUGE
  status: enable
  ttl: 60
  timeout: 1
og_cust_status:
  name: og_cust_status
  desc: Statistic gr_cust_info tables cust_status column
  query:
    - name: og_cust_status
      sql: select schemaname,tablename,attname,most_common_vals,most_common_freqs,(extract(epoch from  now())) as current_time from pg_stats where tablename like 'gr_cust_info%' and attname='cust_status';
      version: '>=0.0.0'
      timeout: 1
      status: enable
  metrics:
    - name: schemaname
      description: Name of schema
      usage: LABEL
    - name: tablename
      description: Name of table
      usage: LABEL
    - name: attname
      description: Name of column
      usage: LABEL
    - name: most_common_vals
      description: most common values
      usage: LABEL
    - name: most_common_freqs
      description: most common frequently
      usage: LABEL
    - name: current_time
      description: Current time
      usage: GAUGE
  status: enable
  ttl: 60
og_count_tmp:
  name: og_count_tmp
  desc: Statistic table rows count
  query:
    - name: og_count_tmp
      sql: select schemaname||'.'||relname as tablename,n_live_tup from pg_stat_user_tables where relname like 'gr_cust_info%';
      version: '>=0.0.0'
      timeout: 1
      status: enable
  metrics:
    - name: tablename
      description: Name of table
      usage: LABEL
    - name: n_live_tup
      description: n_live_tup
      usage: GAUGE
  status: enable
  ttl: 60
pg_setting:
  name: pg_setting
  desc: Important postgres setting entries that must kept same on entire cluster
  query:
    - name: pg_setting
      sql: |-
        SELECT current_setting('max_connections')           AS max_connections,
            current_setting('max_prepared_transactions') AS max_prepared_transactions,
            current_setting('max_replication_slots')     AS max_replication_slots,
            current_setting('max_wal_senders')           AS max_wal_senders,
            current_setting('max_locks_per_transaction') AS max_locks_per_transaction,
            current_setting('block_size')                AS block_size,
            CASE current_setting('wal_log_hints') WHEN 'on' THEN 1 ELSE 0 END AS wal_log_hints;
      version: '>=0.0.0'
      timeout: 1
      status: enable
  metrics:
    - name: max_connections
      description: number of concurrent connections to the database server
      usage: GAUGE
    - name: max_prepared_transactions
      description: maximum number of transactions that can be in the prepared state simultaneously
      usage: GAUGE
    - name: max_replication_slots
      description: maximum number of replication slots
      usage: GAUGE
    - name: max_wal_senders
      description: maximum number of concurrent connections from standby servers
      usage: GAUGE
    - name: max_locks_per_transaction
      description: no more than this many distinct objects can be locked at any one time
      usage: GAUGE
    - name: block_size
      description: pg page block size, 8192 by default
      usage: GAUGE
    - name: wal_log_hints
      description: whether wal_log_hints is enabled, 1 enabled 0 disabled
      usage: GAUGE
  status: enable
  ttl: 5
  timeout: 1
pg_primary_only:
  name: pg_primary_only
  desc: PostgreSQL basic information (on primary)
  primary: true
  query:
    - name: pg_primary_only
      sql: |-
        SELECT
        extract(EPOCH FROM CURRENT_TIMESTAMP)                            AS timestamp,
        extract(EPOCH FROM now() - pg_postmaster_start_time())             AS uptime,
        extract(EPOCH FROM pg_postmaster_start_time())                     AS boot_time,
        pg_xlog_location_diff(pg_current_xlog_location(),'0/0')            AS lsn,
        pg_xlog_location_diff(pg_current_xlog_insert_location(),'0/0')     AS insert_lsn,
        pg_xlog_location_diff(pg_current_xlog_location(),'0/0')            AS write_lsn,
        NULL::BIGINT                                                       AS receive_lsn,
        NULL::BIGINT                                                       AS replay_lsn,
        extract(EPOCH FROM now() - pg_conf_load_time())                    AS conf_reload_time,
        NULL::FLOAT                                                        AS last_replay_time,
        0::FLOAT                                                           AS lag,
        pg_is_in_recovery()                                                AS is_in_recovery,
        FALSE                                                              AS is_xlog_replay_paused;
      version: '>=0.0.0'
      timeout: 1
      ttl: 60
      status: enable
  metrics:
    - name: timestamp
      description: current database timestamp in unix epoch
      usage: GAUGE
    - name: uptime
      description: seconds since postmaster start
      usage: GAUGE
    - name: boot_time
      description: postmaster boot timestamp in unix epoch
      usage: GAUGE
    - name: lsn
      description: log sequence number, current write location
      usage: COUNTER
    - name: insert_lsn
      description: primary only, location of current wal inserting
      usage: COUNTER
    - name: write_lsn
      description: primary only, location of current wal writing
      usage: COUNTER
    - name: flush_lsn
      description: primary only, location of current wal syncing
      usage: COUNTER
    - name: receive_lsn
      description: replica only, location of wal synced to disk
      usage: COUNTER
    - name: replay_lsn
      description: replica only, location of wal applied
      usage: COUNTER
    - name: conf_reload_time
      description: seconds since last configuration reload
      usage: GAUGE
    - name: last_replay_time
      description: time when last transaction been replayed
      usage: GAUGE
    - name: lag
      description: replica only, replication lag in seconds
      usage: GAUGE
    - name: is_in_recovery
      description: 1 if in recovery mode
      usage: GAUGE
    - name: is_wal_replay_paused
      description: 1 if wal play is paused
      usage: GAUGE
  status: enable
  ttl: 60
  timeout: 1
pg_replica_only:
  name: pg_replica_only
  desc: PostgreSQL basic information (on replica)
  query:
    - name: pg_replica_only
      sql: |-
        SELECT extract(EPOCH FROM CURRENT_TIMESTAMP)                                    AS timestamp,
           extract(EPOCH FROM now() - pg_postmaster_start_time())                   AS uptime,
           extract(EPOCH FROM pg_postmaster_start_time())                           AS boot_time,
           pg_xlog_location_diff(pg_last_xlog_receive_location(),'0/0')                                         AS lsn,
           NULL::BIGINT                                                             AS insert_lsn,
           NULL::BIGINT                                                             AS write_lsn,
           NULL::BIGINT                                                             AS flush_lsn,
           extract(EPOCH FROM now() - pg_conf_load_time())                          AS conf_reload_time,
           extract(EPOCH FROM pg_last_xact_replay_timestamp())                      AS last_replay_time;
      version: '>=0.0.0'
      timeout: 1
      ttl: 60
      status: enable
  metrics:
    - name: timestamp
      description: database current timestamp
      usage: GAUGE
    - name: uptime
      description: seconds since postmaster start
      usage: GAUGE
    - name: boot_time
      description: unix timestamp when postmaster boot
      usage: GAUGE
    - name: lsn
      description: log sequence number, current write location
      usage: COUNTER
    - name: insert_lsn
      description: primary only, location of current wal inserting
      usage: COUNTER
    - name: write_lsn
      description: primary only, location of current wal writing
      usage: COUNTER
    - name: flush_lsn
      description: primary only, location of current wal syncing
      usage: COUNTER
    - name: receive_lsn
      description: replica only, location of wal synced to disk
      usage: COUNTER
    - name: replay_lsn
      description: replica only, location of wal applied
      usage: COUNTER
    - name: conf_reload_time
      description: seconds since last configuration reload
      usage: GAUGE
    - name: last_replay_time
      description: time when last transaction been replayed
      usage: GAUGE
    - name: lag
      description: replica only, replication lag in seconds
      usage: GAUGE
    - name: is_in_recovery
      description: 1 if in recovery mode
      usage: GAUGE
    - name: is_wal_replay_paused
      description: 1 if wal play paused
      usage: GAUGE
    - name: is_in_backup
      description: 1 if backup is in progress
      usage: GAUGE
    - name: backup_time
      description: seconds since current backup start
      usage: GAUGE
  status: enable
  ttl: 60
  timeout: 1
pg_class:
  name: pg_class
  desc: Postgres relation catalog info db level normal version
  query:
    - name: pg_class
      sql: |-
        SELECT CURRENT_CATALOG                                              AS datname,
           relnamespace                                   AS nspname,
           relname,
           relkind,
           relpages,
           reltuples,
           CASE WHEN relkind = 'i' THEN NULL ELSE age(relfrozenxid64) END AS relage,
           pg_relation_size(oid)                                        AS relsize
        FROM pg_class
        WHERE relkind IN ('r', 'i', 'm', 't')
        ORDER BY relpages DESC LIMIT 32;
      version: '>=0.0.0'
      timeout: 3
      status: enable
  metrics:
    - name: datname
      description: database name of this relation
      usage: LABEL
    - name: nspname
      description: schema name of this relation
      usage: LABEL
    - name: relname
      description: relation name of this relation
      usage: LABEL
    - name: relkind
      description: relation type r-table i-index s-sequence m-mview t-toast
      usage: LABEL
    - name: relpages
      description: exact page count of this relation
      usage: GAUGE
    - name: reltuples
      description: estimate relation tuples
      usage: GAUGE
    - name: relage
      description: age of non-index relation
      usage: GAUGE
    - name: relsize
      description: size of this relation
      usage: GAUGE
  status: enable
  ttl: 5
  timeout: 3
pg_sync_standby:
  name: pg_sync_standby
  desc: PostgreSQL synchronous standby status and names
  query:
    - name: pg_sync_standby
      sql: |-
        SELECT CASE names WHEN NULL THEN '""' WHEN '' THEN 'null' ELSE names END AS names,
           CASE names WHEN NULL THEN 1 WHEN '' THEN 1 ELSE 0 END               AS disabled,
           CASE names WHEN NULL THEN 0 WHEN '' THEN 0 ELSE 1 END               AS enabled
        FROM (SELECT current_setting('synchronous_standby_names') AS names) t;
      version: '>=0.0.0'
      timeout: 1
      status: enable
  metrics:
    - name: names
      description: a list of standby servers that can support synchronous replication, empty if not enabled
      usage: LABEL
    - name: disabled
      description: 1 if disabled, 0 if enabled
      usage: GAUGE
    - name: enabled
      description: 1 if enabled, 0 if disabled
      usage: GAUGE
  status: enable
  ttl: 5
  timeout: 1
pg_checkpoint:
  name: pg_checkpoint
  desc: checkpoint information from pg_control_checkpoint since 10
  query:
    - name: pg_sync_standby
      sql: |-
        SELECT timeline_id                                 AS tli,
           full_page_writes,
           next_oid::BIGINT,
           next_multixact_id::text::BIGINT,
           next_multi_offset::text::BIGINT,
           oldest_xid::text::BIGINT,
           oldest_xid_dbid::text::BIGINT,
           oldest_active_xid::text::BIGINT,
           checkpoint_time                             AS time,
           extract(epoch from now() - checkpoint_time) AS elapse
        FROM pg_control_checkpoint();
      version: '>=0.0.0'
      timeout: 1
      status: enable
  metrics:
    - name: checkpoint_lsn
      description: lsn of checkpoint
      usage: COUNTER
    - name: redo_lsn
      description: redo start LSN
      usage: COUNTER
    - name: tli
      description: current WAL timeline
      usage: GAUGE
    - name: prev_tli
      description: previous WAL timeline
      usage: GAUGE
    - name: full_page_writes
      description: is full page write enabled ?
      usage: GAUGE
    - name: next_xid_epoch
      description: next xid epoch since this checkpoint
      usage: GAUGE
    - name: next_xid
      description: next xid since this checkpoint
      usage: GAUGE
    - name: next_oid
      description: next object id since this checkpoint
      usage: GAUGE
    - name: next_multixact_id
      description: next multixact id of this checkpoint
      usage: GAUGE
    - name: next_multi_offset
      description: next multixact id offset of this checkpoint
      usage: GAUGE
    - name: oldest_xid
      description: oldest existing xid of the checkpoint
      usage: GAUGE
    - name: oldest_xid_dbid
      description: which db contains the oldest xid
      usage: GAUGE
    - name: oldest_active_xid
      description: oldest active xid of the checkpoint
      usage: GAUGE
    - name: oldest_multi_xid
      description: oldest active multi xid of the checkpoint
      usage: GAUGE
    - name: oldest_multi_dbid
      description: which db contins the oldest multi xid
      usage: GAUGE
    - name: oldest_commit_ts_xid
      description: xid with oldest commit ts by the checkpoint
      usage: GAUGE
    - name: newest_commit_ts_xid
      description: xid with newest commit ts by the checkpoint
      usage: GAUGE
    - name: time
      description: timestamp of this checkpoint
      usage: GAUGE
    - name: elapse
      description: time elapsed since this checkpoint in seconds
      usage: GAUGE
  status: enable
  ttl: 5
  timeout: 1
gs_total_memory_detail:
  name: gs_total_memory_detail
  desc: all kinds of memorytype and detail
  query:
    - name: gs_total_memory_detail
      sql: |-
        select *  from gs_total_memory_detail;
      version: '>=0.0.0'
      timeout: 1
      status: enable
  metrics:
    - name: nodename
      description: every node in this cluster
      usage: LABEL
    - name: memorytype
      description: Name of memorytype
      usage: LABEL
    - name: memorymbytes
      description: memory type allocates memory size
      usage: GAUGE
  status: enable
  ttl: 5
  timeout: 1
gs_session_memory_detail:
  name: gs_session_memory_detail
  desc: all kinds of memorytype and detail
  query:
    - name: gs_session_memory_detail
      sql: |-
        select contextname,
        sum(totalsize)/1024/1024 as totalsize,
        sum(freesize)/1024/1024 as freesize,
        count(*) count
        from gs_session_memory_detail group by contextname
        order by totalsize desc limit 10;
      version: '>=0.0.0'
      timeout: 1
      status: enable
  metrics:
    - name: contextname
      description: memory context name
      usage: LABEL
    - name: totalsize
      description: current memory context total memory, unit byte
      usage: COUNTER
    - name: freesize
      description: total number of memory freed in the current memory context, unit byte
      usage: COUNTER
    - name: count
      description: numbers of counts
      usage: COUNTER
  status: enable
  ttl: 5
  timeout: 1
gs_shared_memory_detail:
  name: gs_shared_memory_detail
  desc: all kinds of memorytype and detail
  query:
    - name: gs_shared_memory_detail
      sql: |-
        select contextname,
        sum(totalsize)/1024/1024 as totalsize,
        sum(freesize)/1024/1024 as freesize,
        count(*) count
        from gs_shared_memory_detail group by contextname
        order by totalsize desc limit 10;
      version: '>=0.0.0'
      timeout: 1
      status: enable
  metrics:
    - name: contextname
      description: memory context name
      usage: LABEL
    - name: totalsize
      description: current memory context total memory, unit byte
      usage: COUNTER
    - name: freesize
      description: total number of memory freed in the current memory context, unit byte
      usage: COUNTER
    - name: count
      description: numbers of counts
      usage: COUNTER
  status: enable
  ttl: 5
  timeout: 1
pg_xact:
  name: pg_xact
  desc: opengauss transaction identifier information
  query:
    - name: pg_xact
      sql: |-
        WITH snap(v) AS (SELECT txid_current_snapshot()),
         xset(v) AS  (SELECT txid_snapshot_xip(v) FROM snap),
         xnum(v) AS (SELECT count(*) from xset),
         xmin(v) AS (SELECT txid_snapshot_xmin(v) FROM snap),
         xmax(v) AS (SELECT txid_snapshot_xmin(v) FROM snap)
        SELECT xmin.v AS xmin, xmax.v AS xmax, xnum.v AS xnum FROM xmin, xmax, xnum;
      version: '>=0.0.0'
      timeout: 1
      status: enable
  metrics:
    - name: xmin
      description: earliest txid that is still active
      usage: GAUGE
    - name: xmax
      description: first as-yet-unassigned txid. txid >= this are invisible.
      usage: GAUGE
    - name: xnum
      description: current active transaction count
      usage: GAUGE
  status: enable
  ttl: 5
  timeout: 1
pg_table:
  name: pg_table
  desc: PostgreSQL table statistics, db level, normal version
  query:
    - name: pg_table
      sql: |-
        SELECT CURRENT_CATALOG                     AS datname,
            psut.schemaname                     AS nspname,
            psut.relname,
            seq_scan,
            seq_tup_read,
            idx_scan,
            idx_tup_fetch,
            seq_scan + idx_scan                 AS tbl_scan,
            seq_tup_read + idx_tup_fetch        AS tup_read,
            n_tup_ins,
            n_tup_upd,
            n_tup_del,
            (n_tup_ins + n_tup_upd + n_tup_del) AS n_tup_mod,
            n_tup_hot_upd,
            n_live_tup,
            n_dead_tup,
            last_vacuum,
            last_autovacuum,
            last_analyze,
            last_autoanalyze,
            vacuum_count,
            autovacuum_count,
            analyze_count,
            autoanalyze_count,
            heap_blks_read,
            heap_blks_hit,
            idx_blks_read,
            idx_blks_hit,
            toast_blks_read,
            toast_blks_hit,
            tidx_blks_read,
            tidx_blks_hit
         FROM pg_stat_user_tables psut,
          pg_statio_user_tables psio WHERE psio.relid = psut.relid
         ORDER BY 8 DESC LIMIT 128;
      version: '>=0.0.0'
      timeout: 1
      status: enable
  metrics:
    - name: datname
      description: database name of this relation
      usage: LABEL
    - name: nspname
      description: schema name of this relation
      usage: LABEL
    - name: relname
      description: relation name of this relation
      usage: LABEL
    - name: seq_scan
      description: sequential scans initiated on this table
      usage: COUNTER
    - name: seq_tup_read
      description: live rows fetched by sequential scans
      usage: COUNTER
    - name: idx_scan
      description: index scans initiated on this table
      usage: COUNTER
    - name: idx_tup_fetch
      description: rows fetched by index scans
      usage: COUNTER
    - name: tbl_scan
      description: total table scan = index scan + seq scan
      usage: COUNTER
    - name: tup_read
      description: total tuples read = index fetch + seq read
      usage: COUNTER
    - name: n_tup_ins
      description: rows inserted
      usage: COUNTER
    - name: n_tup_upd
      description: rows updated
      usage: COUNTER
    - name: n_tup_del
      description: rows deleted
      usage: COUNTER
    - name: n_tup_mod
      description: rows modified (insert + update + delete)
      usage: COUNTER
    - name: n_tup_hot_upd
      description: rows updated in HOT mode
      usage: COUNTER
    - name: n_live_tup
      description: estimated live rows
      usage: GAUGE
    - name: n_dead_tup
      description: estimated dead rows
      usage: GAUGE
    - name: n_mod_since_analyze
      description: rows changed since last analyze
      usage: GAUGE
    - name: last_vacuum
      description: when table was manually vacuumed last time (FULL not count)
      usage: GAUGE
    - name: last_autovacuum
      description: when table was automatically vacuumed last time
      usage: GAUGE
    - name: last_analyze
      description: when table was manually analyzed last time
      usage: GAUGE
    - name: last_autoanalyze
      description: when table was automatically analyzed last time
      usage: GAUGE
    - name: vacuum_count
      description: manual vacuum count (FULL not count)
      usage: COUNTER
    - name: autovacuum_count
      description: automatic vacuum count
      usage: COUNTER
    - name: analyze_count
      description: manual analyze count
      usage: COUNTER
    - name: autoanalyze_count
      description: automatic analyze count
      usage: COUNTER
    - name: heap_blks_read
      description: relation heap read
      usage: COUNTER
    - name: heap_blks_hit
      description: relation heap hit
      usage: COUNTER
    - name: idx_blks_read
      description: index read
      usage: COUNTER
    - name: idx_blks_hit
      description: index hit
      usage: COUNTER
    - name: toast_blks_read
      description: toast heap read
      usage: COUNTER
    - name: toast_blks_hit
      description: toast heap hit
      usage: COUNTER
    - name: tidx_blks_read
      description: toast index read
      usage: COUNTER
    - name: tidx_blks_hit
      description: toast index hit
      usage: COUNTER
  status: enable
  ttl: 10
  timeout: 1
pg_index:
  name: pg_index
  desc: opengauss index statistics, db level, normal version
  query:
    - name: pg_index
      sql: |-
        SELECT CURRENT_CATALOG AS datname,
           psui.schemaname      AS nspname,
           psui.indexrelname    AS relname,
           idx_scan,
           idx_tup_read,
           idx_tup_fetch,
           idx_blks_read,
           idx_blks_hit
        FROM pg_stat_user_indexes psui,
        pg_statio_user_indexes psio
        WHERE psio.indexrelid = psui.indexrelid
        ORDER BY 4 DESC LIMIT 128;
      version: '>=0.0.0'
      timeout: 1
      status: enable
      enableCache: enable
  metrics:
    - name: datname
      description: database name of this relation
      usage: LABEL
    - name: nspname
      description: schema name of this relation
      usage: LABEL
    - name: relname
      description: relation name of this relation
      usage: LABEL
    - name: idx_scan
      description: index scans initiated on this index
      usage: GAUGE
    - name: idx_tup_read
      description: index entries returned by scans on this index
      usage: COUNTER
    - name: idx_tup_fetch
      description: live table rows fetched by simple index scans using this index
      usage: COUNTER
    - name: idx_blks_read
      description: blocks been read from disk of this index
      usage: COUNTER
    - name: idx_blks_hit
      description: blocks hit from cache of this index
      usage: COUNTER
  status: enable
  ttl: 10
  timeout: 1
