pg_stat_bgwriter:
  name: pg_stat_bgwriter
  desc: OpenGauss background writer metrics
  query:
    - name: pg_stat_bgwriter
      sql: |-
        SELECT checkpoints_timed,
            checkpoints_req,
            checkpoint_write_time,
            checkpoint_sync_time,
            buffers_checkpoint,
            buffers_clean,
            buffers_backend,
            maxwritten_clean,
            buffers_backend_fsync,
            buffers_alloc,
            stats_reset
        FROM pg_stat_bgwriter
      version: '>=0.0.0'
      timeout: 3
      ttl: 60
      status: enable
  metrics:
    - name: checkpoints_timed
      description: scheduled checkpoints that have been performed
      usage: COUNTER
    - name: checkpoints_req
      description: requested checkpoints that have been performed
      usage: COUNTER
    - name: checkpoint_write_time
      description: time spending on writing files to disk, in µs
      usage: COUNTER
    - name: checkpoint_sync_time
      description: time spending on syncing files to disk, in µs
      usage: COUNTER
    - name: buffers_checkpoint
      description: buffers written during checkpoints
      usage: COUNTER
    - name: buffers_clean
      description: buffers written by the background writer
      usage: COUNTER
    - name: buffers_backend
      description: buffers written directly by a backend
      usage: COUNTER
    - name: maxwritten_clean
      description: times that bgwriter stopped a cleaning scan
      usage: COUNTER
    - name: buffers_backend_fsync
      description: times a backend had to execute its own fsync
      usage: COUNTER
    - name: buffers_alloc
      description: buffers allocated
      usage: COUNTER
    - name: stats_reset
      description: time when statistics were last reset
      usage: COUNTER
  status: enable
  ttl: 60
  timeout: 3
pg_database:
  name: pg_database
  desc: OpenGauss Database size
  query:
    - name: pg_database
      sql: SELECT pg_database.datname, pg_database_size(pg_database.datname) as size_bytes FROM pg_database where datname NOT IN ('template0','template1')
      version: '>=0.0.0'
      timeout: 3
      ttl: 60
      status: enable
  metrics:
    - name: datname
      description: Name of this database
      usage: LABEL
    - name: size_bytes
      description: Disk space used by the database
      usage: GAUGE
  status: enable
  ttl: 60
  timeout: 3
pg_lock:
  name: pg_lock
  desc: OpenGauss lock distribution by mode
  query:
    - name: pg_lock
      sql: |-
        SELECT datname, mode, coalesce(count, 0) AS count
        FROM (
          SELECT d.oid AS database, d.datname, l.mode 
          FROM pg_database d,unnest(ARRAY ['AccessShareLock','RowShareLock','RowExclusiveLock','ShareUpdateExclusiveLock','ShareLock','ShareRowExclusiveLock','ExclusiveLock','AccessExclusiveLock']) l(mode)
          WHERE d.datname NOT IN ('template0','template1')) base
        LEFT JOIN (SELECT database, mode, count(1) AS count 
                   FROM pg_locks
                   WHERE database IS NOT NULL GROUP BY database, mode) cnt 
        USING (database, mode);
      version: '>=0.0.0'
      timeout: 3
      ttl: 60
      status: enable
  metrics:
    - name: datname
      description: Name of this database
      usage: LABEL
    - name: mode
      description: Type of Lock
      usage: LABEL
    - name: count
      description: Number of locks
      usage: GAUGE
  status: enable
  ttl: 60
  timeout: 3
pg_stat_activity:
  name: pg_stat_activity
  desc: OpenGauss backend activity group by state
  query:
    - name: pg_stat_activity
      sql: |-
        SELECT datname,
               state,
               coalesce(count, 0)             AS count,
               coalesce(max_duration, 0)      AS max_duration,
               coalesce(max_tx_duration, 0)   AS max_tx_duration,
               coalesce(max_conn_duration, 0) AS max_conn_duration
        FROM (SELECT d.oid AS database, d.datname, a.state
              FROM pg_database d,
                   unnest(ARRAY ['active','idle','idle in transaction','idle in transaction (aborted)','fastpath function call','disabled']) a(state)
              WHERE d.datname NOT IN ('template0','template1')) base
                 LEFT JOIN (
            SELECT datname, state,
                   count(*) AS count,
                   max(extract(epoch from now() - state_change)) AS max_duration,
                   max(extract(epoch from now() - xact_start))   AS max_tx_duration,
                   max(extract(epoch from now() - backend_start)) AS max_conn_duration
            FROM pg_stat_activity WHERE pid <> pg_backend_pid()
            GROUP BY datname, state
        ) a USING (datname, state);
      version: '>=1.0.0'
      timeout: 3
      ttl: 60
      status: enable
  metrics:
    - name: datname
      description: Name of this database
      usage: LABEL
    - name: state
      description: connection state
      usage: LABEL
    - name: count
      description: number of connections in this state
      usage: GAUGE
    - name: max_duration
      description: max duration since state change among (datname, state)
      usage: GAUGE
    - name: max_tx_duration
      description: max duration in seconds any active transaction has been running
      usage: GAUGE
    - name: max_conn_duration
      description: max backend session duration since state change among (datname, state)
      usage: GAUGE
  status: enable
  ttl: 60
  timeout: 3
pg_stat_database:
  name: pg_stat_database
  desc: OpenGauss database statistics
  query:
    - name: pg_stat_database
      sql: select * from pg_stat_database where datname NOT IN ('template0','template1')
      version: '>=0.0.0'
      timeout: 3
      ttl: 60
      status: enable
  metrics:
    - name: datid
      description: OID of a database
      usage: LABEL
    - name: datname
      description: Name of this database
      usage: LABEL
    - name: numbackends
      description: Number of backends currently connected to this database. This is the only column in this view that returns a value reflecting current state; all other columns return the accumulated values since the last reset.
      usage: GAUGE
    - name: xact_commit
      description: Number of transactions in this database that have been committed
      usage: COUNTER
    - name: xact_rollback
      description: Number of transactions in this database that have been rolled back
      usage: COUNTER
    - name: blks_read
      description: Number of disk blocks read in this database
      usage: COUNTER
    - name: blks_hit
      description: Number of times disk blocks were found already in the buffer cache, so that a read was not necessary (this only includes hits in the OpenGauss buffer cache, not the operating system's file system cache)
      usage: COUNTER
    - name: tup_returned
      description: Number of rows returned by queries in this database
      usage: COUNTER
    - name: tup_fetched
      description: Number of rows fetched by queries in this database
      usage: COUNTER
    - name: tup_inserted
      description: Number of rows inserted by queries in this database
      usage: COUNTER
    - name: tup_updated
      description: Number of rows updated by queries in this database
      usage: COUNTER
    - name: tup_deleted
      description: Number of rows deleted by queries in this database
      usage: COUNTER
    - name: conflicts
      description: Number of queries canceled due to conflicts with recovery in this database. (Conflicts occur only on standby servers; see pg_stat_database_conflicts for details.)
      usage: COUNTER
    - name: temp_files
      description: Number of temporary files created by queries in this database. All temporary files are counted, regardless of why the temporary file was created (e.g., sorting or hashing), and regardless of the log_temp_files setting.
      usage: COUNTER
    - name: temp_bytes
      description: Total amount of data written to temporary files by queries in this database. All temporary files are counted, regardless of why the temporary file was created, and regardless of the log_temp_files setting.
      usage: COUNTER
    - name: deadlocks
      description: Number of deadlocks detected in this database
      usage: COUNTER
    - name: blk_read_time
      description: Time spent reading data file blocks by backends in this database, in milliseconds
      usage: COUNTER
    - name: blk_write_time
      description: Time spent writing data file blocks by backends in this database, in milliseconds
      usage: COUNTER
    - name: stats_reset
      description: Time at which these statistics were last reset
      usage: COUNTER
  status: enable
  ttl: 60
  timeout: 3
pg_stat_database_conflicts:
  name: pg_stat_database_conflicts
  desc: OpenGauss database statistics conflicts
  query:
    - name: pg_stat_database_conflicts
      sql: select * from pg_stat_database_conflicts where datname NOT IN ('template0','template1')
      version: '>=0.0.0'
      timeout: 3
      ttl: 60
      status: enable
  metrics:
    - name: datid
      description: OID of a database
      usage: LABEL
    - name: datname
      description: Name of this database
      usage: LABEL
    - name: confl_tablespace
      description: Number of queries in this database that have been canceled due to dropped tablespaces
      usage: COUNTER
    - name: confl_lock
      description: Number of queries in this database that have been canceled due to lock timeouts
      usage: COUNTER
    - name: confl_snapshot
      description: Number of queries in this database that have been canceled due to old snapshots
      usage: COUNTER
    - name: confl_bufferpin
      description: Number of queries in this database that have been canceled due to pinned buffers
      usage: COUNTER
    - name: confl_deadlock
      description: Number of queries in this database that have been canceled due to deadlocks
      usage: COUNTER
  status: enable
  ttl: 60
  timeout: 3
pg_stat_replication:
  name: pg_stat_replication
  query:
    - name: pg_stat_replication
      sql: |-
        SELECT *,
          (case pg_is_in_recovery() when 't' then null else pg_current_xlog_location() end) AS pg_current_xlog_location,
          (case pg_is_in_recovery() when 't' then null else pg_xlog_location_diff(pg_current_xlog_location(), receiver_replay_location)::float end) AS pg_xlog_location_diff
        FROM pg_stat_replication
      version: '>=1.0.0'
      timeout: 3
      ttl: 60
      status: enable
  metrics:
    - name: procpid
      description: Process ID of a WAL sender process
      usage: DISCARD
    - name: pid
      description: Process ID of a WAL sender process
      usage: DISCARD
    - name: usesysid
      description: OID of the user logged into this WAL sender process
      usage: DISCARD
    - name: usename
      description: Name of the user logged into this WAL sender process
      usage: DISCARD
    - name: application_name
      description: Name of the application that is connected to this WAL sender
      usage: LABEL
    - name: client_addr
      description: IP address of the client connected to this WAL sender. If this field is null, it indicates that the client is connected via a Unix socket on the server machine.
      usage: LABEL
    - name: client_hostname
      description: Host name of the connected client, as reported by a reverse DNS lookup of client_addr. This field will only be non-null for IP connections, and only when log_hostname is enabled.
      usage: DISCARD
    - name: client_port
      description: TCP port number that the client is using for communication with this WAL sender, or -1 if a Unix socket is used
      usage: DISCARD
    - name: backend_start
      description: with time zone      Time when this process was started, i.e., when the client connected to this WAL sender
      usage: DISCARD
    - name: backend_xmin
      description: The current backend's xmin horizon.
      usage: DISCARD
    - name: state
      description: Current WAL sender state
      usage: LABEL
    - name: sender_sent_location
      description: Last transaction log position sent on this connection
      usage: DISCARD
    - name: receiver_write_location
      description: Last transaction log position written to disk by this standby server
      usage: DISCARD
    - name: receiver_flush_location
      description: Last transaction log position flushed to disk by this standby server
      usage: DISCARD
    - name: receiver_replay_location
      description: Last transaction log position replayed into the database on this standby server
      usage: DISCARD
    - name: sync_priority
      description: Priority of this standby server for being chosen as the synchronous standby
      usage: DISCARD
    - name: sync_state
      description: Synchronous state of this standby server
      usage: DISCARD
    - name: pg_current_xlog_location
      description: pg_current_xlog_location
      usage: DISCARD
    - name: sent_location
      description: Last transaction log position sent on this connection
      usage: DISCARD
    - name: write_location
      description: Last transaction log position written to disk by this standby server
      usage: DISCARD
    - name: flush_location
      description: Last transaction log position flushed to disk by this standby server
      usage: DISCARD
    - name: replay_location
      description: Last transaction log position replayed into the database on this standby server
      usage: DISCARD
    - name: sent_lsn
      description: Last transaction log position sent on this connection
      usage: DISCARD
    - name: write_lsn
      description: Last transaction log position written to disk by this standby server
      usage: DISCARD
    - name: flush_lsn
      description: Last transaction log position flushed to disk by this standby server
      usage: DISCARD
    - name: replay_lsn
      description: Last transaction log position replayed into the database on this standby server
      usage: DISCARD
    - name: sync_priority
      description: Priority of this standby server for being chosen as the synchronous standby
      usage: DISCARD
    - name: sync_state
      description: Synchronous state of this standby server
      usage: DISCARD
    - name: slot_name
      description: A unique, cluster-wide identifier for the replication slot
      usage: LABEL
    - name: plugin
      description: The base name of the shared object containing the output plugin this logical slot is using, or null for physical slots
      usage: DISCARD
    - name: slot_type
      description: The slot type - physical or logical
      usage: DISCARD
    - name: datoid
      description: The OID of the database this slot is associated with, or null. Only logical slots have an associated database
      usage: DISCARD
    - name: database
      description: The name of the database this slot is associated with, or null. Only logical slots have an associated database
      usage: DISCARD
    - name: active
      description: True if this slot is currently actively being used
      usage: DISCARD
    - name: active_pid
      description: Process ID of a WAL sender process
      usage: DISCARD
    - name: xmin
      description: The oldest transaction that this slot needs the database to retain. VACUUM cannot remove tuples deleted by any later transaction
      usage: DISCARD
    - name: catalog_xmin
      description: The oldest transaction affecting the system catalogs that this slot needs the database to retain. VACUUM cannot remove catalog tuples deleted by any later transaction
      usage: DISCARD
    - name: restart_lsn
      description: The address (LSN) of oldest WAL which still might be required by the consumer of this slot and thus won't be automatically removed during checkpoints
      usage: DISCARD
    - name: pg_current_xlog_location
      description: pg_current_xlog_location
      usage: DISCARD
    - name: pg_current_wal_lsn
      description: pg_current_xlog_location
      usage: DISCARD
    - name: pg_current_wal_lsn_bytes
      description: WAL position in bytes
      usage: GAUGE
    - name: pg_xlog_location_diff
      description: Lag in bytes between master and slave
      usage: GAUGE
    - name: pg_wal_lsn_diff
      description: Lag in bytes between master and slave
      usage: GAUGE
    - name: confirmed_flush_lsn
      description: LSN position a consumer of a slot has confirmed flushing the data received
      usage: DISCARD
    - name: write_lag
      description: Time elapsed between flushing recent WAL locally and receiving notification that this standby server has written it (but not yet flushed it or applied it). This can be used to gauge the delay that synchronous_commit level remote_write incurred while committing if this server was configured as a synchronous standby.
      usage: DISCARD
    - name: flush_lag
      description: Time elapsed between flushing recent WAL locally and receiving notification that this standby server has written and flushed it (but not yet applied it). This can be used to gauge the delay that synchronous_commit level remote_flush incurred while committing if this server was configured as a synchronous standby.
      usage: DISCARD
    - name: replay_lag
      description: Time elapsed between flushing recent WAL locally and receiving notification that this standby server has written, flushed and applied it. This can be used to gauge the delay that synchronous_commit level remote_apply incurred while committing if this server was configured as a synchronous standby.
      usage: DISCARD
  status: enable
  ttl: 60
  timeout: 3
og_connections:
  name: og_connections
  desc: OpenGauss database connections
  query:
  - name: og_connections
    sql: select max_conn,used_conn,max_conn-used_conn res_for_normal from (select count(*) used_conn from pg_stat_activity) t1,(select setting::int max_conn from pg_settings where name='max_connections') t2
    version: '>=0.0.0'
    timeout: 3
    status: enable
  metrics:
  - name: max_conn
    description: total of connections
    usage: GAUGE
  - name: used_conn
    description: used of connections
    usage: GAUGE
  - name: res_for_normal
    description: reserve of connections
    usage: GAUGE
  status: enable
  ttl: 60
  timeout: 3
og_directory:
  name: og_directory
  desc: OpenGauss database directory
  query:
  - name: og_directory
    sql: SELECT pg_settings.name AS dir_name, pg_settings.setting AS dir_set, 0::int as dir_num FROM pg_settings WHERE pg_settings.name = ANY (ARRAY['data_directory'::text, 'unix_socket_directory'::text, 'log_directory'::text, 'audit_directory'::text])
    version: '>=0.0.0'
    timeout: 3
    status: enable
  metrics:
  - name: dir_name
    description: Name of parameters
    usage: LABEL
  - name: dir_set
    description: Values of parameters
    usage: LABEL
  - name: dir_num
    description: number of parameters
    usage: GAUGE
  status: enable
  ttl: 60
  timeout: 3
og_run_times:
  name: og_run_times
  desc: OpenGauss database run times
  query:
  - name: og_run_times
    sql: select 'cluster_runtime' as run_name,extract(epoch from(now() - pg_postmaster_start_time())) as run_time
    version: '>=0.0.0'
    timeout: 3
    status: enable
  metrics:
  - name: run_name
    description: Name of cluster
    usage: LABEL
  - name: run_time
    description: Run times of cluster
    usage: GAUGE
  status: enable
  ttl: 60
  timeout: 3
og_tables_size:
  name: og_tables_size
  desc: OpenGauss tables size
  query:
  - name: og_tables_size
    sql: select ut.schemaname||'.'||ut.relname tablename,pg_total_relation_size(relid) as all_size,pg_table_size(relid) as table_size,pg_indexes_size(relid) as all_indexes_size,ts.spcname as spcname from pg_class c left join pg_stat_user_tables ut on c.oid=ut.relid left join pg_tablespace ts on c.reltablespace=ts.oid left join pg_namespace ns on c.relnamespace=ns.oid where ns.nspname not in('pg_catalog', 'information_schema', 'pg_toast') and c.relkind='r' order by pg_total_relation_size(relid) desc limit 10
    version: '>=0.0.0'
    timeout: 3
    status: enable
  metrics:
  - name: tablename
    description: Name of table
    usage: LABEL
  - name: all_size
    description: Size of table and indexes
    usage: GAUGE
  - name: table_size
    description: Size of table
    usage: GAUGE
  - name: all_indexes_size
    description: Size of indexes
    usage: GAUGE
  - name: spcname
    description: Name of tablespace
    usage: DISCARD
  status: enable
  ttl: 60
  timeout: 3
og_indexes_size:
  name: og_indexes_size
  desc: OpenGauss database indexes size
  query:
  - name: og_indexes_size
    sql: |-
      SELECT n.nspname as schema_name,c2.relname as table_name,c.relname as index_name,pg_catalog.pg_table_size(c.oid) as index_size
      FROM pg_catalog.pg_class c 
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace 
      LEFT JOIN pg_catalog.pg_index i ON i.indexrelid = c.oid 
      LEFT JOIN pg_catalog.pg_class c2 ON i.indrelid = c2.oid 
      WHERE c.relkind IN ('i','I','') AND n.nspname <> 'pg_catalog' AND n.nspname <> 'information_schema' AND n.nspname !~ '^pg_toast' AND c.relname not like 'matviewmap_%' AND c.relname not like 'mlog_%' AND pg_catalog.pg_table_is_visible(c.oid) 
      ORDER BY 4 desc
    version: '>=0.0.0'
    timeout: 3
    status: enable
  metrics:
  - name: schema_name
    description: Schema name of index
    usage: LABEL
  - name: table_name
    description: Table name of index
    usage: LABEL
  - name: index_name
    description: Name of index
    usage: LABEL
  - name: index_size
    description: Size of index
    usage: GAUGE
  status: enable
  ttl: 60
  timeout: 3
og_need_indexes:
  name: og_need_indexes
  desc: OpenGauss tables need indexes
  query:
  - name: og_need_indexes
    sql: select schemaname||'.'||relname as tablename, pg_size_pretty(pg_table_size(relid)) as table_size, seq_scan, seq_tup_read, coalesce(idx_scan,0) idx_scan, coalesce(idx_tup_fetch,0) idx_tup_fetch,coalesce((idx_scan/(seq_scan+idx_scan) * 100),0) as rate from pg_stat_user_tables where pg_table_size(relid) > 1024*1024*1024 and coalesce((idx_scan/(seq_scan+idx_scan) * 100),0) < 90 order by seq_scan desc limit 10
    version: '>=0.0.0'
    timeout: 3
    status: enable
  metrics:
  - name: tablename
    description: Name of table
    usage: LABEL
  - name: table_size
    description: Size of table
    usage: LABEL
  - name: seq_scan
    description: Scan numbers of seq
    usage: GAUGE
  - name: seq_tup_read
    description: Tup read numbers of seq
    usage: GAUGE
  - name: idx_scan
    description: Scan numbers of indexes
    usage: GAUGE
  - name: idx_tup_fetch
    description: Tup fetch numbers of indexes
    usage: GAUGE
  - name: rate
    description: Index used rate
    usage: GAUGE
  status: enable
  ttl: 60
  timeout: 3
og_tables_expansion_rate:
  name: og_tables_expansion_rate
  desc: OpenGauss database tables expansion rate
  query:
  - name: og_tables_expansion_rate
    sql: |-
      select schemaname,relname,n_live_tup,n_dead_tup,round((n_dead_tup/(n_dead_tup+n_live_tup) *100),2) as dead_rate,
      coalesce(last_vacuum,'1970-01-01')::text as last_vacuum,
      coalesce(last_autovacuum,'1970-01-01')::text as last_autovacuum ,
      coalesce(last_analyze,'1970-01-01')::text as last_analyze,
      coalesce(last_autoanalyze,'1970-01-01')::text as last_autoanalyze 
      from pg_stat_user_tables
      where n_live_tup > 0
      order by 5 asc
    version: '>=0.0.0'
    timeout: 3
    status: enable
  metrics:
  - name: schemaname
    description: Schema name of table
    usage: LABEL
  - name: relname
    description: Table name of table
    usage: LABEL
  - name: n_live_tup
    description: live tup of table
    usage: LABEL
  - name: n_dead_tup
    description: dead tup of table
    usage: LABEL
  - name: dead_rate
    description: Dead rate of table
    usage: GAUGE
  - name: last_vacuum
    description: dead tup of table
    usage: LABEL
  - name: last_autovacuum
    description: dead tup of table
    usage: LABEL
  - name: last_analyze
    description: dead tup of table
    usage: LABEL
  - name: last_autoanalyze
    description: dead tup of table
    usage: LABEL
  status: enable
  ttl: 60
  timeout: 3
og_active_slowsql:
  name: og_active_slowsql
  desc: OpenGauss active slow query
  query:
  - name: og_active_slowsql
    sql: select datname,usename,client_addr,query_start::text,extract(epoch from (now() - query_start)) as query_runtime,xact_start::text,extract(epoch from(now() - xact_start)) as xact_runtime,state,query from pg_stat_activity where state not in('idle') and query !=''
    version: '>=0.0.0'
    timeout: 3
    status: enable
  metrics:
  - name: datname
    description: Name of database
    usage: LABEL
  - name: usename
    description: Name of user
    usage: LABEL
  - name: client_addr
    description: Client address
    usage: LABEL
  - name: query_start
    description: Query start time
    usage: LABEL
  - name: query_runtime
    description: Query running time
    usage: GAUGE
  - name: xact_start
    description: Start time of transaction
    usage: LABEL
  - name: xact_runtime
    description: transaction running time
    usage: LABEL
  - name: state
    description: Query state
    usage: LABEL
  - name: query
    description: Query sql
    usage: LABEL
  status: enable
  ttl: 5
  timeout: 3
og_sql_history:
  name: og_sql_history
  desc: OpenGauss history query statement
  query:
  - name: og_sql_history
    sql: select unique_sql_id,n_calls,cpu_time,min_elapse_time,max_elapse_time,total_elapse_time,query from dbe_perf.statement where n_calls > 10000 order by total_elapse_time desc limit 10;
    version: '>=0.0.0'
    timeout: 3
    status: enable
  metrics:
  - name: unique_sql_id
    description: Name of database
    usage: LABEL
  - name: n_calls
    description: Name of user
    usage: GAUGE
  - name: cpu_time
    description: Client address
    usage: GAUGE
  - name: min_elapse_time
    description: Query start time
    usage: LABEL
  - name: max_elapse_time
    description: Query running time
    usage: GAUGE
  - name: total_elapse_time
    description: Start time of transaction
    usage: GAUGE
  - name: query
    description: transaction running time
    usage: LABEL
  status: enable
  ttl: 60
  timeout: 3
og_wait_events:
  name: og_wait_events
  desc: OpenGauss wait event statements
  query:
  - name: og_wait_events
    sql: select nodename,type,event,wait,failed_wait,total_wait_time from dbe_perf.wait_events where wait !=0 order by total_wait_time desc;
    version: '>=0.0.0'
    timeout: 3
    status: enable
  metrics:
  - name: nodename
    description: Name of node
    usage: LABEL
  - name: type
    description: Type of wait events
    usage: LABEL
  - name: event
    description: Event name
    usage: LABEL
  - name: wait
    description: Numbers of wait
    usage: COUNTER
  - name: failed_wait
    description: failed wait
    usage: LABEL
  - name: total_wait_time
    description: Total wait times
    usage: COUNTER
  status: enable
  ttl: 60
  timeout: 3
og_lock_sql:
  name: og_lock_sql
  desc: OpenGauss lock sqls
  query:
  - name: og_lock_sql
    sql: |-
      select distinct locker.pid as locker_pid,
        locked.pid as locked_pid,
        coalesce(locker_act.client_addr,'127.0.0.1')::inet as locker_addr,
        coalesce(locked_act.client_addr,'127.0.0.1')::inet as locked_addr,
        locker_act.usename as locker_username,
        locked_act.usename as locked_username,
        locker.mode as locker_mode,
        locked.mode as locked_mode,
        locker.locktype as locker_locktype,
        locked.locktype as locked_locktype,
        locker_act.usename as locker_user,
        locked_act.usename as locker_user,
        (locker_act.xact_start)::text as locker_xact_start,
        (locked_act.xact_start)::text as locked_xact_start,
        (locker_act.query_start)::text as locker_query_start,
        (locked_act.query_start)::text as locked_query_start,
        extract(epoch from now() - locked_act.query_start) as locked_times,
        locker_act.query as locker_query,
        locked_act.query as locked_query
      from pg_locks locked,
        pg_locks locker,
        pg_stat_activity locked_act,
        pg_stat_activity locker_act
      where locker.granted=true
        and locked.granted=false
        and locked.pid=locked_act.pid
        and locker.pid=locker_act.pid
        and locker_act.query not like '%select distinct locker.pid %'
        and locker.pid <> locked.pid
        and locker.mode not like 'AccessShareLock' and locker.mode not like 'ExclusiveLock'
      order by 13 asc limit 10;
    version: '>=0.0.0'
    timeout: 3
    status: enable
  metrics:
  - name: locker_pid
    description: Pid of locker
    usage: LABEL
  - name: locked_pid
    description: Pid of locked
    usage: LABEL
  - name: locker_addr
    description: Event name
    usage: LABEL
  - name: locked_addr
    description: Event name
    usage: LABEL
  - name: locker_username
    description: Numbers of wait
    usage: LABEL
  - name: locked_username
    description: Numbers of wait
    usage: LABEL
  - name: locker_mode
    description: failed wait
    usage: LABEL
  - name: locked_mode
    description: failed wait
    usage: LABEL
  - name: locker_locktype
    description: Total wait times
    usage: LABEL
  - name: locked_locktype
    description: Total wait times
    usage: LABEL
  - name: locker_user
    description: Total wait times
    usage: LABEL
  - name: locked_user
    description: Total wait times
    usage: LABEL
  - name: locker_xact_start
    description: Total wait times
    usage: LABEL
  - name: locked_xact_start
    description: Total wait times
    usage: LABEL
  - name: locker_query_start
    description: Total wait times
    usage: LABEL
  - name: locked_query_start
    description: Total wait times
    usage: LABEL
  - name: locked_times
    description: Total wait times
    usage: GAUGE
  - name: locker_query
    description: Total wait times
    usage: LABEL
  - name: locked_query
    description: Total wait times
    usage: LABEL
  status: enable
  ttl: 60
  timeout: 3





