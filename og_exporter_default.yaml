
# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# ┃ pg_stat_bgwriter
# ┃ OpenGauss background writer metrics
# ┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
# ┃ TTL      ┆ -1
# ┃ Timeout  ┆ 1s
# ┃ Primary  ┆ false
# ┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
# ┃ COUNTER  checkpoints_timed              scheduled checkpoints that have been performed
# ┃ COUNTER  checkpoints_req                requested checkpoints that have been performed
# ┃ COUNTER  checkpoint_write_time          time spending on writing files to disk, in µs
# ┃ COUNTER  checkpoint_sync_time           time spending on syncing files to disk, in µs
# ┃ COUNTER  buffers_checkpoint             buffers written during checkpoints
# ┃ COUNTER  buffers_clean                  buffers written by the background writer
# ┃ COUNTER  buffers_backend                buffers written directly by a backend
# ┃ COUNTER  maxwritten_clean               times that bgwriter stopped a cleaning scan
# ┃ COUNTER  buffers_backend_fsync          times a backend had to execute its own fsync
# ┃ COUNTER  buffers_alloc                  buffers allocated
# ┃ COUNTER  stats_reset                    time when statistics were last reset
# ┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
# ┃ pg_stat_bgwriter_checkpoints_timed{}      COUNTER  scheduled checkpoints that have been performed
# ┃ pg_stat_bgwriter_checkpoints_req{}        COUNTER  requested checkpoints that have been performed
# ┃ pg_stat_bgwriter_checkpoint_write_time{}  COUNTER  time spending on writing files to disk, in µs
# ┃ pg_stat_bgwriter_checkpoint_sync_time{}   COUNTER  time spending on syncing files to disk, in µs
# ┃ pg_stat_bgwriter_buffers_checkpoint{}     COUNTER  buffers written during checkpoints
# ┃ pg_stat_bgwriter_buffers_clean{}          COUNTER  buffers written by the background writer
# ┃ pg_stat_bgwriter_buffers_backend{}        COUNTER  buffers written directly by a backend
# ┃ pg_stat_bgwriter_maxwritten_clean{}       COUNTER  times that bgwriter stopped a cleaning scan
# ┃ pg_stat_bgwriter_buffers_backend_fsync{}  COUNTER  times a backend had to execute its own fsync
# ┃ pg_stat_bgwriter_buffers_alloc{}          COUNTER  buffers allocated
# ┃ pg_stat_bgwriter_stats_reset{}            COUNTER  time when statistics were last reset
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
pg_stat_bgwriter:
  name: pg_stat_bgwriter
  desc: OpenGauss background writer metrics
  query:
    - name: pg_stat_bgwriter
      sql: |-
        SELECT checkpoints_timed,
          checkpoints_req,
          checkpoint_write_time,
          checkpoint_sync_time,
          buffers_checkpoint,
          buffers_clean,
          buffers_backend,
          maxwritten_clean,
          buffers_backend_fsync,
          buffers_alloc,
          stats_reset
        FROM pg_stat_bgwriter
      version: '>=0.0.0'
      timeout: 1
      ttl: -1
      status: enable
  metrics:
    - name: checkpoints_timed
      description: scheduled checkpoints that have been performed
      usage: COUNTER
    - name: checkpoints_req
      description: requested checkpoints that have been performed
      usage: COUNTER
    - name: checkpoint_write_time
      description: time spending on writing files to disk, in µs
      usage: COUNTER
    - name: checkpoint_sync_time
      description: time spending on syncing files to disk, in µs
      usage: COUNTER
    - name: buffers_checkpoint
      description: buffers written during checkpoints
      usage: COUNTER
    - name: buffers_clean
      description: buffers written by the background writer
      usage: COUNTER
    - name: buffers_backend
      description: buffers written directly by a backend
      usage: COUNTER
    - name: maxwritten_clean
      description: times that bgwriter stopped a cleaning scan
      usage: COUNTER
    - name: buffers_backend_fsync
      description: times a backend had to execute its own fsync
      usage: COUNTER
    - name: buffers_alloc
      description: buffers allocated
      usage: COUNTER
    - name: stats_reset
      description: time when statistics were last reset
      usage: COUNTER
  status: enable
  ttl: -1
  timeout: 1




# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# ┃ pg_stat_database_conflicts
# ┃ OpenGauss database statistics conflicts
# ┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
# ┃ TTL      ┆ 60
# ┃ Timeout  ┆ 1s
# ┃ Primary  ┆ false
# ┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
# ┃ LABEL    datid                          OID of a database
# ┃ LABEL    datname                        Name of this database
# ┃ COUNTER  confl_tablespace               Number of queries in this database that have been canceled due to dropped tablespaces
# ┃ COUNTER  confl_lock                     Number of queries in this database that have been canceled due to lock timeouts
# ┃ COUNTER  confl_snapshot                 Number of queries in this database that have been canceled due to old snapshots
# ┃ COUNTER  confl_bufferpin                Number of queries in this database that have been canceled due to pinned buffers
# ┃ COUNTER  confl_deadlock                 Number of queries in this database that have been canceled due to deadlocks
# ┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
# ┃ pg_stat_database_conflicts_confl_tablespace{datid,datname}  COUNTER  Number of queries in this database that have been canceled due to dropped tablespaces
# ┃ pg_stat_database_conflicts_confl_lock{datid,datname}        COUNTER  Number of queries in this database that have been canceled due to lock timeouts
# ┃ pg_stat_database_conflicts_confl_snapshot{datid,datname}    COUNTER  Number of queries in this database that have been canceled due to old snapshots
# ┃ pg_stat_database_conflicts_confl_bufferpin{datid,datname}   COUNTER  Number of queries in this database that have been canceled due to pinned buffers
# ┃ pg_stat_database_conflicts_confl_deadlock{datid,datname}    COUNTER  Number of queries in this database that have been canceled due to deadlocks
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
pg_stat_database_conflicts:
  name: pg_stat_database_conflicts
  desc: OpenGauss database statistics conflicts
  query:
    - name: pg_stat_database_conflicts
      sql: select * from pg_stat_database_conflicts where datname NOT IN ('template0','template1');
      version: '>=0.0.0'
      timeout: 1
      ttl: 60
      status: enable
  metrics:
    - name: datid
      description: OID of a database
      usage: LABEL
    - name: datname
      description: Name of this database
      usage: LABEL
    - name: confl_tablespace
      description: Number of queries in this database that have been canceled due to dropped tablespaces
      usage: COUNTER
    - name: confl_lock
      description: Number of queries in this database that have been canceled due to lock timeouts
      usage: COUNTER
    - name: confl_snapshot
      description: Number of queries in this database that have been canceled due to old snapshots
      usage: COUNTER
    - name: confl_bufferpin
      description: Number of queries in this database that have been canceled due to pinned buffers
      usage: COUNTER
    - name: confl_deadlock
      description: Number of queries in this database that have been canceled due to deadlocks
      usage: COUNTER
  status: enable
  ttl: 60
  timeout: 1




# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# ┃ pg_lock
# ┃ OpenGauss lock distribution by mode
# ┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
# ┃ TTL      ┆ 60
# ┃ Timeout  ┆ 1s
# ┃ Primary  ┆ false
# ┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
# ┃ LABEL    datname                        Name of this database
# ┃ LABEL    mode                           Type of Lock
# ┃ GAUGE    count                          Number of locks
# ┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
# ┃ pg_lock_count{datname,mode}  GAUGE    Number of locks
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
pg_lock:
  name: pg_lock
  desc: OpenGauss lock distribution by mode
  query:
    - name: pg_lock
      sql: |-
        SELECT datname, mode, coalesce(count, 0) AS count
        FROM (
          SELECT d.oid AS database, d.datname, l.mode
          FROM pg_database d,unnest(ARRAY ['AccessShareLock','RowShareLock','RowExclusiveLock','ShareUpdateExclusiveLock','ShareLock','ShareRowExclusiveLock','ExclusiveLock','AccessExclusiveLock']) l(mode)
          WHERE d.datname NOT IN ('template0','template1')) base
        LEFT JOIN (SELECT database, mode, count(1) AS count
                   FROM pg_locks
                   WHERE database IS NOT NULL GROUP BY database, mode) cnt
        USING (database, mode);
      version: '>=0.0.0'
      timeout: 1
      ttl: 60
      status: enable
  metrics:
    - name: datname
      description: Name of this database
      usage: LABEL
    - name: mode
      description: Type of Lock
      usage: LABEL
    - name: count
      description: Number of locks
      usage: GAUGE
  status: enable
  ttl: 60
  timeout: 1




# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# ┃ pg_stat_activity
# ┃ OpenGauss backend activity group by state
# ┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
# ┃ TTL      ┆ 60
# ┃ Timeout  ┆ 1s
# ┃ Primary  ┆ false
# ┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
# ┃ LABEL    datname                        Name of this database
# ┃ LABEL    state                          connection state
# ┃ GAUGE    count                          number of connections in this state
# ┃ GAUGE    max_duration                   max duration since state change among (datname, state)
# ┃ GAUGE    max_tx_duration                max duration in seconds any active transaction has been running
# ┃ GAUGE    max_conn_duration              max backend session duration since state change among (datname, state)
# ┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
# ┃ pg_stat_activity_count{datname,state}              GAUGE    number of connections in this state
# ┃ pg_stat_activity_max_duration{datname,state}       GAUGE    max duration since state change among (datname, state)
# ┃ pg_stat_activity_max_tx_duration{datname,state}    GAUGE    max duration in seconds any active transaction has been running
# ┃ pg_stat_activity_max_conn_duration{datname,state}  GAUGE    max backend session duration since state change among (datname, state)
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
pg_stat_activity:
  name: pg_stat_activity
  desc: OpenGauss backend activity group by state
  query:
    - name: pg_stat_activity
      sql: |-
        SELECT datname,
               state,
               coalesce(count, 0)             AS count,
               coalesce(max_duration, 0)      AS max_duration,
               coalesce(max_tx_duration, 0)   AS max_tx_duration,
               coalesce(max_conn_duration, 0) AS max_conn_duration
        FROM (SELECT d.oid AS database, d.datname, a.state
              FROM pg_database d,
                   unnest(ARRAY ['active','idle','idle in transaction','idle in transaction (aborted)','fastpath function call','disabled']) a(state)
              WHERE d.datname NOT IN ('template0','template1')) base
                 LEFT JOIN (
            SELECT datname, state,
                   count(*) AS count,
                   max(extract(epoch from now() - state_change)) AS max_duration,
                   max(extract(epoch from now() - xact_start))   AS max_tx_duration,
                   max(extract(epoch from now() - backend_start)) AS max_conn_duration
            FROM pg_stat_activity WHERE pid <> pg_backend_pid()
            GROUP BY datname, state
        ) a USING (datname, state);
      version: '>=1.0.0'
      timeout: 1
      ttl: 60
      status: enable
  metrics:
    - name: datname
      description: Name of this database
      usage: LABEL
    - name: state
      description: connection state
      usage: LABEL
    - name: count
      description: number of connections in this state
      usage: GAUGE
    - name: max_duration
      description: max duration since state change among (datname, state)
      usage: GAUGE
    - name: max_tx_duration
      description: max duration in seconds any active transaction has been running
      usage: GAUGE
    - name: max_conn_duration
      description: max backend session duration since state change among (datname, state)
      usage: GAUGE
  status: enable
  ttl: 60
  timeout: 1




# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# ┃ pg_database
# ┃ OpenGauss Database size
# ┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
# ┃ TTL      ┆ 60
# ┃ Timeout  ┆ 1s
# ┃ Primary  ┆ false
# ┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
# ┃ LABEL    datname                        Name of this database
# ┃ GAUGE    size_bytes                     Disk space used by the database
# ┃ GAUGE    age                            database age calculated by age(datfrozenxid64)
# ┃ GAUGE    is_template                    1 for template db and 0 for normal db
# ┃ GAUGE    allow_conn                     1 allow connection and 0 does not allow
# ┃ GAUGE    conn_limit                     connection limit, -1 for no limit
# ┃ GAUGE    frozen_xid                     tuple with xmin below this will always be visable (until wrap around)
# ┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
# ┃ pg_database_size_bytes{datname}   GAUGE    Disk space used by the database
# ┃ pg_database_age{datname}          GAUGE    database age calculated by age(datfrozenxid64)
# ┃ pg_database_is_template{datname}  GAUGE    1 for template db and 0 for normal db
# ┃ pg_database_allow_conn{datname}   GAUGE    1 allow connection and 0 does not allow
# ┃ pg_database_conn_limit{datname}   GAUGE    connection limit, -1 for no limit
# ┃ pg_database_frozen_xid{datname}   GAUGE    tuple with xmin below this will always be visable (until wrap around)
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
pg_database:
  name: pg_database
  desc: OpenGauss Database size
  query:
    - name: pg_database
      sql: |-
        SELECT datname,
          pg_database_size(pg_database.datname) as size_bytes,
          age(datfrozenxid64)          AS age,
          datistemplate              AS is_template,
          datallowconn               AS allow_conn,
          datconnlimit               AS conn_limit,
          datfrozenxid::TEXT::BIGINT as frozen_xid
        FROM pg_database
        where datname NOT IN ('template0','template1');
      version: '>=0.0.0'
      timeout: 1
      ttl: 60
      status: enable
  metrics:
    - name: datname
      description: Name of this database
      usage: LABEL
    - name: size_bytes
      description: Disk space used by the database
      usage: GAUGE
    - name: age
      description: database age calculated by age(datfrozenxid64)
      usage: GAUGE
    - name: is_template
      description: 1 for template db and 0 for normal db
      usage: GAUGE
    - name: allow_conn
      description: 1 allow connection and 0 does not allow
      usage: GAUGE
    - name: conn_limit
      description: connection limit, -1 for no limit
      usage: GAUGE
    - name: frozen_xid
      description: tuple with xmin below this will always be visable (until wrap around)
      usage: GAUGE
  status: enable
  ttl: 60
  timeout: 1




# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# ┃ pg_replication_slots
# ┃ 
# ┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
# ┃ TTL      ┆ 60
# ┃ Timeout  ┆ 1s
# ┃ Primary  ┆ false
# ┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
# ┃ LABEL    slot_name                      Slot name
# ┃ LABEL    plugin                         Logical plugin
# ┃ LABEL    slot_type                      Slot type
# ┃ LABEL    datoid                         Database oid
# ┃ LABEL    database                       Database name
# ┃ LABEL    active                         Is active
# ┃ LABEL    xmin                           replication xid
# ┃ LABEL    catalog_xmin                   logical decode xid
# ┃ LABEL    restart_lsn                    Xlog info
# ┃ GAUGE    delay_lsn                      delay lsn from pg_current_xlog_location()
# ┃ DISCARD  dummy_standby                  Is real standby
# ┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
# ┃ pg_replication_slots_delay_lsn{slot_name,plugin,slot_type,datoid,database,active,xmin,catalog_xmin,restart_lsn}  GAUGE    delay lsn from pg_current_xlog_location()
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
pg_replication_slots:
  name: pg_replication_slots
  query:
    - name: pg_replication_slots
      sql: |-
        select slot_name,
            database                    as datname,
            coalesce(plugin,'_') as plugin,
            slot_type,datoid,coalesce(database,'_') as database,
            active,
            coalesce(xmin,'_') as xmin,
            coalesce(catalog_xmin,'_') as catalog_xmin,
            restart_lsn,
            pg_xlog_location_diff(pg_current_xlog_location(),restart_lsn) as delay_lsn,
            dummy_standby,
            pg_xlog_location_diff(restart_lsn ,'0/0'::text)        AS restart_lsn,
            pg_xlog_location_diff(CASE WHEN pg_is_in_recovery() THEN pg_last_xlog_receive_location()
            ELSE pg_current_xlog_location() END , restart_lsn)  AS retained_bytes
            from pg_replication_slots;
      version: '>=1.0.0'
      timeout: 1
      ttl: 60
      status: enable
  metrics:
    - name: slot_name
      description: Slot name
      usage: LABEL
    - name: plugin
      description: Logical plugin
      usage: LABEL
    - name: slot_type
      description: Slot type
      usage: LABEL
    - name: datoid
      description: Database oid
      usage: LABEL
    - name: database
      description: Database name
      usage: LABEL
    - name: active
      description: Is active
      usage: LABEL
    - name: xmin
      description: replication xid
      usage: LABEL
    - name: catalog_xmin
      description: logical decode xid
      usage: LABEL
    - name: restart_lsn
      description: Xlog info
      usage: LABEL
    - name: delay_lsn
      description: delay lsn from pg_current_xlog_location()
      usage: GAUGE
    - name: dummy_standby
      description: Is real standby
      usage: DISCARD
  status: enable
  ttl: 60
  timeout: 1




# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# ┃ pg_stat_replication
# ┃ 
# ┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
# ┃ TTL      ┆ 60
# ┃ Timeout  ┆ 1s
# ┃ Primary  ┆ false
# ┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
# ┃ LABEL    pid                            unique walsender pid
# ┃ LABEL    client_addr                    client address of wal receiver
# ┃ LABEL    application_name               application name of standby
# ┃ LABEL    state                          replication state startup|catchup|streaming|backup|stopping
# ┃ LABEL    sync_state                     replication sync state async|potential|sync|quorum
# ┃ COUNTER  lsn                            current log position on this server
# ┃ GAUGE    sent_diff                      last log position sent to this standby server diff with current lsn
# ┃ GAUGE    write_diff                     last log position written to disk by this standby server diff with current lsn
# ┃ GAUGE    flush_diff                     last log position flushed to disk by this standby server diff with current lsn
# ┃ GAUGE    replay_diff                    last log position replayed into the database on this standby server diff with current lsn
# ┃ COUNTER  sent_lsn                       last log position sent to this standby server
# ┃ COUNTER  write_lsn                      last log position written to disk by this standby server
# ┃ COUNTER  flush_lsn                      last log position flushed to disk by this standby server
# ┃ COUNTER  replay_lsn                     last log position replayed into the database on this standby server
# ┃ GAUGE    write_lag                      latest ACK lsn diff with write (sync-remote-write lag)
# ┃ GAUGE    flush_lag                      latest ACK lsn diff with flush (sync-remote-flush lag)
# ┃ GAUGE    replay_lag                     latest ACK lsn diff with replay (sync-remote-apply lag)
# ┃ GAUGE    backend_uptime                 how long since standby connect to this server
# ┃ GAUGE    backend_xmin                   this standby's xmin horizon reported by hot_standby_feedback.
# ┃ GAUGE    sync_priority                  priority of being chosen as synchronous standby
# ┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
# ┃ pg_stat_replication_lsn{pid,client_addr,application_name,state,sync_state}             COUNTER  current log position on this server
# ┃ pg_stat_replication_sent_diff{pid,client_addr,application_name,state,sync_state}       GAUGE    last log position sent to this standby server diff with current lsn
# ┃ pg_stat_replication_write_diff{pid,client_addr,application_name,state,sync_state}      GAUGE    last log position written to disk by this standby server diff with current lsn
# ┃ pg_stat_replication_flush_diff{pid,client_addr,application_name,state,sync_state}      GAUGE    last log position flushed to disk by this standby server diff with current lsn
# ┃ pg_stat_replication_replay_diff{pid,client_addr,application_name,state,sync_state}     GAUGE    last log position replayed into the database on this standby server diff with current lsn
# ┃ pg_stat_replication_sent_lsn{pid,client_addr,application_name,state,sync_state}        COUNTER  last log position sent to this standby server
# ┃ pg_stat_replication_write_lsn{pid,client_addr,application_name,state,sync_state}       COUNTER  last log position written to disk by this standby server
# ┃ pg_stat_replication_flush_lsn{pid,client_addr,application_name,state,sync_state}       COUNTER  last log position flushed to disk by this standby server
# ┃ pg_stat_replication_replay_lsn{pid,client_addr,application_name,state,sync_state}      COUNTER  last log position replayed into the database on this standby server
# ┃ pg_stat_replication_write_lag{pid,client_addr,application_name,state,sync_state}       GAUGE    latest ACK lsn diff with write (sync-remote-write lag)
# ┃ pg_stat_replication_flush_lag{pid,client_addr,application_name,state,sync_state}       GAUGE    latest ACK lsn diff with flush (sync-remote-flush lag)
# ┃ pg_stat_replication_replay_lag{pid,client_addr,application_name,state,sync_state}      GAUGE    latest ACK lsn diff with replay (sync-remote-apply lag)
# ┃ pg_stat_replication_backend_uptime{pid,client_addr,application_name,state,sync_state}  GAUGE    how long since standby connect to this server
# ┃ pg_stat_replication_backend_xmin{pid,client_addr,application_name,state,sync_state}    GAUGE    this standby's xmin horizon reported by hot_standby_feedback.
# ┃ pg_stat_replication_sync_priority{pid,client_addr,application_name,state,sync_state}   GAUGE    priority of being chosen as synchronous standby
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
pg_stat_replication:
  name: pg_stat_replication
  query:
    - name: pg_stat_replication
      sql: |-
        SELECT pid,client_addr,application_name,state,sync_state,lsn,
                   lsn - sent_location   as sent_diff,
           lsn - write_location  as write_diff,
           lsn - flush_location  as flush_diff,
           lsn - replay_location as replay_diff,
           sent_location,write_location,flush_location,replay_location,
           backend_uptime,sync_priority
           FROM (
           SELECT pid,
             client_addr,
             application_name,
             state,
             sync_state,
             pg_xlog_location_diff(CASE WHEN pg_is_in_recovery() THEN pg_last_xlog_receive_location() ELSE pg_current_xlog_location() END, '0/0') AS lsn,
             pg_xlog_location_diff(sender_sent_location,'0/0')                          AS sent_location,
             pg_xlog_location_diff(receiver_write_location,'0/0')                         AS write_location,
             pg_xlog_location_diff(receiver_flush_location,'0/0')                         AS flush_location,
             pg_xlog_location_diff(receiver_replay_location,'0/0')                        AS replay_location,
             pg_xlog_location_diff(receiver_replay_location,pg_current_xlog_location())   AS replay_lag,
             extract(EPOCH FROM now() - backend_start) AS backend_uptime,
             sync_priority
        FROM pg_stat_replication) t;
      version: '>=1.0.0'
      timeout: 1
      ttl: 60
      status: enable
  metrics:
    - name: pid
      description: unique walsender pid
      usage: LABEL
    - name: client_addr
      description: client address of wal receiver
      usage: LABEL
    - name: application_name
      description: application name of standby
      usage: LABEL
    - name: state
      description: replication state startup|catchup|streaming|backup|stopping
      usage: LABEL
    - name: sync_state
      description: replication sync state async|potential|sync|quorum
      usage: LABEL
    - name: lsn
      description: current log position on this server
      usage: COUNTER
    - name: sent_diff
      description: last log position sent to this standby server diff with current lsn
      usage: GAUGE
    - name: write_diff
      description: last log position written to disk by this standby server diff with current lsn
      usage: GAUGE
    - name: flush_diff
      description: last log position flushed to disk by this standby server diff with current lsn
      usage: GAUGE
    - name: replay_diff
      description: last log position replayed into the database on this standby server diff with current lsn
      usage: GAUGE
    - name: sent_lsn
      description: last log position sent to this standby server
      usage: COUNTER
    - name: write_lsn
      description: last log position written to disk by this standby server
      usage: COUNTER
    - name: flush_lsn
      description: last log position flushed to disk by this standby server
      usage: COUNTER
    - name: replay_lsn
      description: last log position replayed into the database on this standby server
      usage: COUNTER
    - name: write_lag
      description: latest ACK lsn diff with write (sync-remote-write lag)
      usage: GAUGE
    - name: flush_lag
      description: latest ACK lsn diff with flush (sync-remote-flush lag)
      usage: GAUGE
    - name: replay_lag
      description: latest ACK lsn diff with replay (sync-remote-apply lag)
      usage: GAUGE
    - name: backend_uptime
      description: how long since standby connect to this server
      usage: GAUGE
    - name: backend_xmin
      description: this standby's xmin horizon reported by hot_standby_feedback.
      usage: GAUGE
    - name: sync_priority
      description: priority of being chosen as synchronous standby
      usage: GAUGE
  status: enable
  ttl: 60
  timeout: 1




# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# ┃ pg_stat_database
# ┃ OpenGauss database statistics
# ┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
# ┃ TTL      ┆ -1
# ┃ Timeout  ┆ 3s
# ┃ Primary  ┆ false
# ┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
# ┃ LABEL    datid                          OID of a database
# ┃ LABEL    datname                        Name of this database
# ┃ GAUGE    numbackends                    Number of backends currently connected to this database. This is the only column in this view that returns a value reflecting current state; all other columns return the accumulated values since the last reset.
# ┃ COUNTER  xact_commit                    Number of transactions in this database that have been committed
# ┃ COUNTER  xact_rollback                  Number of transactions in this database that have been rolled back
# ┃ COUNTER  blks_read                      Number of disk blocks read in this database
# ┃ COUNTER  blks_hit                       Number of times disk blocks were found already in the buffer cache, so that a read was not necessary (this only includes hits in the OpenGauss buffer cache, not the operating system's file system cache)
# ┃ COUNTER  tup_returned                   Number of rows returned by queries in this database
# ┃ COUNTER  tup_fetched                    Number of rows fetched by queries in this database
# ┃ COUNTER  tup_inserted                   Number of rows inserted by queries in this database
# ┃ COUNTER  tup_updated                    Number of rows updated by queries in this database
# ┃ COUNTER  tup_deleted                    Number of rows deleted by queries in this database
# ┃ COUNTER  conflicts                      Number of queries canceled due to conflicts with recovery in this database. (Conflicts occur only on standby servers; see pg_stat_database_conflicts for details.)
# ┃ COUNTER  temp_files                     Number of temporary files created by queries in this database. All temporary files are counted, regardless of why the temporary file was created (e.g., sorting or hashing), and regardless of the log_temp_files setting.
# ┃ COUNTER  temp_bytes                     Total amount of data written to temporary files by queries in this database. All temporary files are counted, regardless of why the temporary file was created, and regardless of the log_temp_files setting.
# ┃ COUNTER  deadlocks                      Number of deadlocks detected in this database
# ┃ COUNTER  blk_read_time                  Time spent reading data file blocks by backends in this database, in milliseconds
# ┃ COUNTER  blk_write_time                 Time spent writing data file blocks by backends in this database, in milliseconds
# ┃ COUNTER  stats_reset                    Time at which these statistics were last reset
# ┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
# ┃ pg_stat_database_numbackends{datid,datname}     GAUGE    Number of backends currently connected to this database. This is the only column in this view that returns a value reflecting current state; all other columns return the accumulated values since the last reset.
# ┃ pg_stat_database_xact_commit{datid,datname}     COUNTER  Number of transactions in this database that have been committed
# ┃ pg_stat_database_xact_rollback{datid,datname}   COUNTER  Number of transactions in this database that have been rolled back
# ┃ pg_stat_database_blks_read{datid,datname}       COUNTER  Number of disk blocks read in this database
# ┃ pg_stat_database_blks_hit{datid,datname}        COUNTER  Number of times disk blocks were found already in the buffer cache, so that a read was not necessary (this only includes hits in the OpenGauss buffer cache, not the operating system's file system cache)
# ┃ pg_stat_database_tup_returned{datid,datname}    COUNTER  Number of rows returned by queries in this database
# ┃ pg_stat_database_tup_fetched{datid,datname}     COUNTER  Number of rows fetched by queries in this database
# ┃ pg_stat_database_tup_inserted{datid,datname}    COUNTER  Number of rows inserted by queries in this database
# ┃ pg_stat_database_tup_updated{datid,datname}     COUNTER  Number of rows updated by queries in this database
# ┃ pg_stat_database_tup_deleted{datid,datname}     COUNTER  Number of rows deleted by queries in this database
# ┃ pg_stat_database_conflicts{datid,datname}       COUNTER  Number of queries canceled due to conflicts with recovery in this database. (Conflicts occur only on standby servers; see pg_stat_database_conflicts for details.)
# ┃ pg_stat_database_temp_files{datid,datname}      COUNTER  Number of temporary files created by queries in this database. All temporary files are counted, regardless of why the temporary file was created (e.g., sorting or hashing), and regardless of the log_temp_files setting.
# ┃ pg_stat_database_temp_bytes{datid,datname}      COUNTER  Total amount of data written to temporary files by queries in this database. All temporary files are counted, regardless of why the temporary file was created, and regardless of the log_temp_files setting.
# ┃ pg_stat_database_deadlocks{datid,datname}       COUNTER  Number of deadlocks detected in this database
# ┃ pg_stat_database_blk_read_time{datid,datname}   COUNTER  Time spent reading data file blocks by backends in this database, in milliseconds
# ┃ pg_stat_database_blk_write_time{datid,datname}  COUNTER  Time spent writing data file blocks by backends in this database, in milliseconds
# ┃ pg_stat_database_stats_reset{datid,datname}     COUNTER  Time at which these statistics were last reset
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
pg_stat_database:
  name: pg_stat_database
  desc: OpenGauss database statistics
  query:
    - name: pg_stat_database
      sql: select * from pg_stat_database where datname NOT IN ('template0','template1')
      version: '>=0.0.0'
      timeout: 1s
      ttl: -1
      status: enable
  metrics:
    - name: datid
      description: OID of a database
      usage: LABEL
    - name: datname
      description: Name of this database
      usage: LABEL
    - name: numbackends
      description: Number of backends currently connected to this database. This is the only column in this view that returns a value reflecting current state; all other columns return the accumulated values since the last reset.
      usage: GAUGE
    - name: xact_commit
      description: Number of transactions in this database that have been committed
      usage: COUNTER
    - name: xact_rollback
      description: Number of transactions in this database that have been rolled back
      usage: COUNTER
    - name: blks_read
      description: Number of disk blocks read in this database
      usage: COUNTER
    - name: blks_hit
      description: Number of times disk blocks were found already in the buffer cache, so that a read was not necessary (this only includes hits in the OpenGauss buffer cache, not the operating system's file system cache)
      usage: COUNTER
    - name: tup_returned
      description: Number of rows returned by queries in this database
      usage: COUNTER
    - name: tup_fetched
      description: Number of rows fetched by queries in this database
      usage: COUNTER
    - name: tup_inserted
      description: Number of rows inserted by queries in this database
      usage: COUNTER
    - name: tup_updated
      description: Number of rows updated by queries in this database
      usage: COUNTER
    - name: tup_deleted
      description: Number of rows deleted by queries in this database
      usage: COUNTER
    - name: conflicts
      description: Number of queries canceled due to conflicts with recovery in this database. (Conflicts occur only on standby servers; see pg_stat_database_conflicts for details.)
      usage: COUNTER
    - name: temp_files
      description: Number of temporary files created by queries in this database. All temporary files are counted, regardless of why the temporary file was created (e.g., sorting or hashing), and regardless of the log_temp_files setting.
      usage: COUNTER
    - name: temp_bytes
      description: Total amount of data written to temporary files by queries in this database. All temporary files are counted, regardless of why the temporary file was created, and regardless of the log_temp_files setting.
      usage: COUNTER
    - name: deadlocks
      description: Number of deadlocks detected in this database
      usage: COUNTER
    - name: blk_read_time
      description: Time spent reading data file blocks by backends in this database, in milliseconds
      usage: COUNTER
    - name: blk_write_time
      description: Time spent writing data file blocks by backends in this database, in milliseconds
      usage: COUNTER
    - name: stats_reset
      description: Time at which these statistics were last reset
      usage: COUNTER
  status: enable
  ttl: -1
  timeout: 1




# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# ┃ pg_run_times
# ┃ OpenGauss database run times
# ┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
# ┃ TTL      ┆ 60
# ┃ Timeout  ┆ 1s
# ┃ Primary  ┆ false
# ┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
# ┃ LABEL    run_name                       Name of cluster
# ┃ GAUGE    db_role                        Role of database
# ┃ GAUGE    run_time                       Run times of cluster
# ┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
# ┃ pg_run_times_db_role{run_name}   GAUGE    Role of database
# ┃ pg_run_times_run_time{run_name}  GAUGE    Run times of cluster
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
pg_run_times:
  name: pg_run_times
  desc: OpenGauss database run times
  query:
    - name: pg_run_times
      sql: select 'cluster_runtime' as run_name,(case pg_is_in_recovery() when 'f' then 1 else 0 end) as db_role,extract(epoch from(now() - pg_postmaster_start_time())) as run_time;
      version: '>=0.0.0'
      timeout: 1
      ttl: 60
      status: enable
  metrics:
    - name: run_name
      description: Name of cluster
      usage: LABEL
    - name: db_role
      description: Role of database
      usage: GAUGE
    - name: run_time
      description: Run times of cluster
      usage: GAUGE
  status: enable
  ttl: 60
  timeout: 1


